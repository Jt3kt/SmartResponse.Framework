{
	"info": {
		"_postman_id": "cdc52740-5548-442f-8d34-497828a66751",
		"name": "LogRhythm Case API",
		"description": "This is the API documentation for the LogRhythm Case service.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "cases",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "actions",
							"item": [
								{
									"name": "Change Case Status *",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"statusNumber\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/actions/changeStatus/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"actions",
												"changeStatus",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Update the status of a case.\n\n  \\* *unstable (may change in a future release)*\n"
									},
									"response": [
										{
											"name": "Returns the updated case.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"statusNumber\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/actions/changeStatus/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"actions",
														"changeStatus",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Add Case Collaborators *",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"groupNumbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/actions/addCollaborators/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"actions",
												"addCollaborators",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Add collaborators to a case.\n\n  \\* *unstable (may change in a future release)*\n"
									},
									"response": [
										{
											"name": "Returns the updated case with added collaborators.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"groupNumbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/actions/addCollaborators/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"actions",
														"addCollaborators",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Remove Case Collaborators *",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/actions/removeCollaborators/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"actions",
												"removeCollaborators",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Remove collaborators from a case. You may not remove the owner as a collaborator from the case.\n\n  \\* *unstable (may change in a future release)*\n"
									},
									"response": [
										{
											"name": "Returns the updated case.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/actions/removeCollaborators/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"actions",
														"removeCollaborators",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Change Case Owner *",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"number\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/actions/changeOwner/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"actions",
												"changeOwner",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Update the owner of a case. The new owner must already be a collaborator on the case.\n\n  \\* *unstable (may change in a future release)*\n"
									},
									"response": [
										{
											"name": "Returns the updated case with the newly updated owner.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"number\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/actions/changeOwner/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"actions",
														"changeOwner",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Add Case Tags *",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/actions/addTags/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"actions",
												"addTags",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Add tags to a case.\n\n  \\* *unstable (may change in a future release)*\n"
									},
									"response": [
										{
											"name": "Returns the updated case.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/actions/addTags/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"actions",
														"addTags",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Remove Case Tags *",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/actions/removeTags/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"actions",
												"removeTags",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Remove tags from a case.\n\n  \\* *unstable (may change in a future release)*\n"
									},
									"response": [
										{
											"name": "Returns the updated case.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"numbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/actions/removeTags/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"actions",
														"removeTags",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "associated",
							"item": [
								{
									"name": "List Associated Cases",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/associated/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"associated",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Returns a list of cases associated with a specific case."
									},
									"response": [
										{
											"name": "Returns the associated case summaries.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/associated/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"associated",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"number\": \"<integer>\",\n  \"externalId\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"summary\": {\n   \"id\": \"<uuid>\",\n   \"number\": \"<integer>\",\n   \"externalId\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\",\n   \"dateClosed\": \"<dateTime>\",\n   \"owner\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"lastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"name\": \"<string>\",\n   \"status\": {\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\"\n   },\n   \"priority\": \"<integer>\",\n   \"dueDate\": \"<dateTime>\",\n   \"resolution\": \"<string>\",\n   \"resolutionDateUpdated\": \"<dateTime>\",\n   \"resolutionLastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"summary\": \"<string>\",\n   \"entity\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"collaborators\": [\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    }\n   ],\n   \"tags\": [\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    }\n   ]\n  }\n },\n {\n  \"id\": \"<uuid>\",\n  \"number\": \"<integer>\",\n  \"externalId\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"summary\": {\n   \"id\": \"<uuid>\",\n   \"number\": \"<integer>\",\n   \"externalId\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\",\n   \"dateClosed\": \"<dateTime>\",\n   \"owner\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"lastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"name\": \"<string>\",\n   \"status\": {\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\"\n   },\n   \"priority\": \"<integer>\",\n   \"dueDate\": \"<dateTime>\",\n   \"resolution\": \"<string>\",\n   \"resolutionDateUpdated\": \"<dateTime>\",\n   \"resolutionLastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"summary\": \"<string>\",\n   \"entity\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"collaborators\": [\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    }\n   ],\n   \"tags\": [\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    }\n   ]\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Add Associated Cases",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/associated/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"associated",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Associate cases with a specific case."
									},
									"response": [
										{
											"name": "Returns the requested associated case summaries.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/associated/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"associated",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"number\": \"<integer>\",\n  \"externalId\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"summary\": {\n   \"id\": \"<uuid>\",\n   \"number\": \"<integer>\",\n   \"externalId\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\",\n   \"dateClosed\": \"<dateTime>\",\n   \"owner\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"lastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"name\": \"<string>\",\n   \"status\": {\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\"\n   },\n   \"priority\": \"<integer>\",\n   \"dueDate\": \"<dateTime>\",\n   \"resolution\": \"<string>\",\n   \"resolutionDateUpdated\": \"<dateTime>\",\n   \"resolutionLastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"summary\": \"<string>\",\n   \"entity\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"collaborators\": [\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    }\n   ],\n   \"tags\": [\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    }\n   ]\n  }\n },\n {\n  \"id\": \"<uuid>\",\n  \"number\": \"<integer>\",\n  \"externalId\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"summary\": {\n   \"id\": \"<uuid>\",\n   \"number\": \"<integer>\",\n   \"externalId\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\",\n   \"dateClosed\": \"<dateTime>\",\n   \"owner\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"lastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"name\": \"<string>\",\n   \"status\": {\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\"\n   },\n   \"priority\": \"<integer>\",\n   \"dueDate\": \"<dateTime>\",\n   \"resolution\": \"<string>\",\n   \"resolutionDateUpdated\": \"<dateTime>\",\n   \"resolutionLastUpdatedBy\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   \"summary\": \"<string>\",\n   \"entity\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"collaborators\": [\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"name\": \"<string>\",\n     \"disabled\": \"<boolean>\"\n    }\n   ],\n   \"tags\": [\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    },\n    {\n     \"number\": \"<integer>\",\n     \"text\": \"<string>\"\n    }\n   ]\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Remove Associated Cases",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/associated/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"associated",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Remove associated cases from a case."
									},
									"response": [
										{
											"name": "No body is returned.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ids\": [\n        \"<uuid>\",\n        \"<uuid>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/associated/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"associated",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<object>\""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "metrics",
							"item": [
								{
									"name": "Get Case Metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/metrics/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"metrics",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Return metrics for a specified case."
									},
									"response": [
										{
											"name": "Returns the case metrics.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/metrics/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"metrics",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"completed\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"incident\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"mitigated\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"resolved\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"earliestEvidence\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n }\n}"
										}
									]
								},
								{
									"name": "Update Case Metrics",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"earliestEvidence\": {\n        \"customDate\": \"<dateTime>\",\n        \"note\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/metrics/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"metrics",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Modify custom metric values for a case."
									},
									"response": [
										{
											"name": "Returns the updated metrics.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"earliestEvidence\": {\n        \"customDate\": \"<dateTime>\",\n        \"note\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/metrics/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"metrics",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"completed\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"incident\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"mitigated\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"resolved\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n },\n \"earliestEvidence\": {\n  \"date\": \"<dateTime>\",\n  \"originalDate\": \"<dateTime>\",\n  \"customDate\": \"<dateTime>\",\n  \"note\": \"<string>\"\n }\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "evidence",
							"item": [
								{
									"name": "{number}",
									"item": [
										{
											"name": "Get Evidence",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/evidence/:number/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"evidence",
														":number",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "number",
															"value": "<integer>",
															"description": "Unique, numeric identifier for the evidence."
														}
													]
												},
												"description": "Return a summary of an item of evidence on a case."
											},
											"response": [
												{
													"name": "Returns the a summary of the requested evidence.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/<integer>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"evidence",
																"<integer>",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"number\": \"<integer>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"statusMessage\": \"<string>\",\n \"text\": \"<string>\",\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"file\": {\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\"\n },\n \"alarm\": {\n  \"alarmId\": \"<integer>\",\n  \"alarmDate\": \"<dateTime>\",\n  \"alarmRuleId\": \"<integer>\",\n  \"alarmRuleName\": \"<string>\",\n  \"dateInserted\": \"<dateTime>\",\n  \"entityId\": \"<integer>\",\n  \"entityName\": \"<string>\",\n  \"riskBasedPriorityMax\": \"<integer>\"\n },\n \"logs\": {\n  \"logCount\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"searchIndexId\": \"<string>\"\n },\n \"userEvents\": {\n  \"identityId\": \"<string>\",\n  \"score\": \"<integer>\",\n  \"eventCount\": \"<integer>\",\n  \"analysisStartDate\": \"<dateTime>\",\n  \"analysisEndDate\": \"<dateTime>\"\n }\n}"
												}
											]
										},
										{
											"name": "Update Evidence",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\",\n    \"pinned\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/evidence/:number/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"evidence",
														":number",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "number",
															"value": "<integer>",
															"description": "Unique, numeric identifier for the evidence."
														}
													]
												},
												"description": "Update an item of evidence on a case."
											},
											"response": [
												{
													"name": "Returns the updated evidence.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"text\": \"<string>\",\n    \"pinned\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/<integer>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"evidence",
																"<integer>",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"number\": \"<integer>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"statusMessage\": \"<string>\",\n \"text\": \"<string>\",\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"file\": {\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\"\n },\n \"alarm\": {\n  \"alarmId\": \"<integer>\",\n  \"alarmDate\": \"<dateTime>\",\n  \"alarmRuleId\": \"<integer>\",\n  \"alarmRuleName\": \"<string>\",\n  \"dateInserted\": \"<dateTime>\",\n  \"entityId\": \"<integer>\",\n  \"entityName\": \"<string>\",\n  \"riskBasedPriorityMax\": \"<integer>\"\n },\n \"logs\": {\n  \"logCount\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"searchIndexId\": \"<string>\"\n },\n \"userEvents\": {\n  \"identityId\": \"<string>\",\n  \"score\": \"<integer>\",\n  \"eventCount\": \"<integer>\",\n  \"analysisStartDate\": \"<dateTime>\",\n  \"analysisEndDate\": \"<dateTime>\"\n }\n}"
												}
											]
										},
										{
											"name": "Delete Evidence",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/evidence/:number/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"evidence",
														":number",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "number",
															"value": "<integer>",
															"description": "Unique, numeric identifier for the evidence."
														}
													]
												},
												"description": "Remove an item of evidence from a case."
											},
											"response": [
												{
													"name": "No body is returned.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/<integer>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"evidence",
																"<integer>",
																""
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<object>\""
												}
											]
										},
										{
											"name": "Get Evidence Progress",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/evidence/:number/progress/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"evidence",
														":number",
														"progress",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "number",
															"value": "<integer>",
															"description": "Unique, numeric identifier for the evidence."
														}
													]
												},
												"description": "Return the progress of a pending item of evidence (for example, a file upload)."
											},
											"response": [
												{
													"name": "Returns the progress of a pending item of evidence.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/<integer>/progress/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"evidence",
																"<integer>",
																"progress",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": \"<string>\",\n \"bytesTransferred\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Download File Evidence",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/evidence/:number/download/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"evidence",
														":number",
														"download",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "number",
															"value": "<integer>",
															"description": "Unique, numeric identifier for the evidence."
														}
													]
												},
												"description": "Download an item of file evidence from a case."
											},
											"response": [
												{
													"name": "Returns the downloaded file.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/<integer>/download/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"evidence",
																"<integer>",
																"download",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<binary>\""
												}
											]
										},
										{
											"name": "Get Evidence Logs Bytes",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/evidence/:number/logs-bytes/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"evidence",
														":number",
														"logs-bytes",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "number",
															"value": "<integer>",
															"description": "Unique, numeric identifier for the evidence."
														}
													]
												},
												"description": "Return logs bytes of an item of log evidence on a case."
											},
											"response": [
												{
													"name": "Returns the logs bytes of a log evidence.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/<integer>/logs-bytes/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"evidence",
																"<integer>",
																"logs-bytes",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"bytes\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "List User Events",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/evidence/:number/userEvents/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"evidence",
														":number",
														"userEvents",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "number",
															"value": "<integer>",
															"description": "Unique, numeric identifier for the evidence."
														}
													]
												},
												"description": "Return the list of user events added as evidence on a case."
											},
											"response": [
												{
													"name": "Returns the user events associated as evidence with the case.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/<integer>/userEvents/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"evidence",
																"<integer>",
																"userEvents",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n \"<object>\",\n \"<object>\"\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "List Evidence",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/evidence/?type=<string>,<string>&status=<string>,<string>",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"evidence",
												""
											],
											"query": [
												{
													"key": "type",
													"value": "<string>,<string>",
													"description": "Filter results that have evidence of the specified type."
												},
												{
													"key": "status",
													"value": "<string>,<string>",
													"description": "Filter results that have a specific evidence status."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Return a list of evidence summaries for a case."
									},
									"response": [
										{
											"name": "Returns an array of evidence associated with a case.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/?type=<string>,<string>&status=<string>,<string>",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"evidence",
														""
													],
													"query": [
														{
															"key": "type",
															"value": "<string>,<string>"
														},
														{
															"key": "status",
															"value": "<string>,<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"number\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusMessage\": \"<string>\",\n  \"text\": \"<string>\",\n  \"pinned\": \"<boolean>\",\n  \"datePinned\": \"<dateTime>\",\n  \"file\": {\n   \"name\": \"<string>\",\n   \"size\": \"<integer>\"\n  },\n  \"alarm\": {\n   \"alarmId\": \"<integer>\",\n   \"alarmDate\": \"<dateTime>\",\n   \"alarmRuleId\": \"<integer>\",\n   \"alarmRuleName\": \"<string>\",\n   \"dateInserted\": \"<dateTime>\",\n   \"entityId\": \"<integer>\",\n   \"entityName\": \"<string>\",\n   \"riskBasedPriorityMax\": \"<integer>\"\n  },\n  \"logs\": {\n   \"logCount\": \"<integer>\",\n   \"query\": \"<string>\",\n   \"searchIndexId\": \"<string>\"\n  },\n  \"userEvents\": {\n   \"identityId\": \"<string>\",\n   \"score\": \"<integer>\",\n   \"eventCount\": \"<integer>\",\n   \"analysisStartDate\": \"<dateTime>\",\n   \"analysisEndDate\": \"<dateTime>\"\n  }\n },\n {\n  \"number\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusMessage\": \"<string>\",\n  \"text\": \"<string>\",\n  \"pinned\": \"<boolean>\",\n  \"datePinned\": \"<dateTime>\",\n  \"file\": {\n   \"name\": \"<string>\",\n   \"size\": \"<integer>\"\n  },\n  \"alarm\": {\n   \"alarmId\": \"<integer>\",\n   \"alarmDate\": \"<dateTime>\",\n   \"alarmRuleId\": \"<integer>\",\n   \"alarmRuleName\": \"<string>\",\n   \"dateInserted\": \"<dateTime>\",\n   \"entityId\": \"<integer>\",\n   \"entityName\": \"<string>\",\n   \"riskBasedPriorityMax\": \"<integer>\"\n  },\n  \"logs\": {\n   \"logCount\": \"<integer>\",\n   \"query\": \"<string>\",\n   \"searchIndexId\": \"<string>\"\n  },\n  \"userEvents\": {\n   \"identityId\": \"<string>\",\n   \"score\": \"<integer>\",\n   \"eventCount\": \"<integer>\",\n   \"analysisStartDate\": \"<dateTime>\",\n   \"analysisEndDate\": \"<dateTime>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Add File Evidence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												},
												{
													"key": "note",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/evidence/file/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"evidence",
												"file",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Upload a file as evidence on a case."
									},
									"response": [
										{
											"name": "Returns the newly uploaded evidence.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<binary>"
														},
														{
															"key": "note",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/file/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"evidence",
														"file",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"number\": \"<integer>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"statusMessage\": \"<string>\",\n \"text\": \"<string>\",\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"file\": {\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\"\n },\n \"alarm\": {\n  \"alarmId\": \"<integer>\",\n  \"alarmDate\": \"<dateTime>\",\n  \"alarmRuleId\": \"<integer>\",\n  \"alarmRuleName\": \"<string>\",\n  \"dateInserted\": \"<dateTime>\",\n  \"entityId\": \"<integer>\",\n  \"entityName\": \"<string>\",\n  \"riskBasedPriorityMax\": \"<integer>\"\n },\n \"logs\": {\n  \"logCount\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"searchIndexId\": \"<string>\"\n },\n \"userEvents\": {\n  \"identityId\": \"<string>\",\n  \"score\": \"<integer>\",\n  \"eventCount\": \"<integer>\",\n  \"analysisStartDate\": \"<dateTime>\",\n  \"analysisEndDate\": \"<dateTime>\"\n }\n}"
										}
									]
								},
								{
									"name": "Add Alarm Evidence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alarmNumbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/evidence/alarms/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"evidence",
												"alarms",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Add multiple alarms as evidence on a case."
									},
									"response": [
										{
											"name": "Returns the newly added alarms as evidence.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alarmNumbers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/alarms/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"evidence",
														"alarms",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"number\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusMessage\": \"<string>\",\n  \"text\": \"<string>\",\n  \"pinned\": \"<boolean>\",\n  \"datePinned\": \"<dateTime>\",\n  \"file\": {\n   \"name\": \"<string>\",\n   \"size\": \"<integer>\"\n  },\n  \"alarm\": {\n   \"alarmId\": \"<integer>\",\n   \"alarmDate\": \"<dateTime>\",\n   \"alarmRuleId\": \"<integer>\",\n   \"alarmRuleName\": \"<string>\",\n   \"dateInserted\": \"<dateTime>\",\n   \"entityId\": \"<integer>\",\n   \"entityName\": \"<string>\",\n   \"riskBasedPriorityMax\": \"<integer>\"\n  },\n  \"logs\": {\n   \"logCount\": \"<integer>\",\n   \"query\": \"<string>\",\n   \"searchIndexId\": \"<string>\"\n  },\n  \"userEvents\": {\n   \"identityId\": \"<string>\",\n   \"score\": \"<integer>\",\n   \"eventCount\": \"<integer>\",\n   \"analysisStartDate\": \"<dateTime>\",\n   \"analysisEndDate\": \"<dateTime>\"\n  }\n },\n {\n  \"number\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusMessage\": \"<string>\",\n  \"text\": \"<string>\",\n  \"pinned\": \"<boolean>\",\n  \"datePinned\": \"<dateTime>\",\n  \"file\": {\n   \"name\": \"<string>\",\n   \"size\": \"<integer>\"\n  },\n  \"alarm\": {\n   \"alarmId\": \"<integer>\",\n   \"alarmDate\": \"<dateTime>\",\n   \"alarmRuleId\": \"<integer>\",\n   \"alarmRuleName\": \"<string>\",\n   \"dateInserted\": \"<dateTime>\",\n   \"entityId\": \"<integer>\",\n   \"entityName\": \"<string>\",\n   \"riskBasedPriorityMax\": \"<integer>\"\n  },\n  \"logs\": {\n   \"logCount\": \"<integer>\",\n   \"query\": \"<string>\",\n   \"searchIndexId\": \"<string>\"\n  },\n  \"userEvents\": {\n   \"identityId\": \"<string>\",\n   \"score\": \"<integer>\",\n   \"eventCount\": \"<integer>\",\n   \"analysisStartDate\": \"<dateTime>\",\n   \"analysisEndDate\": \"<dateTime>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Add Log Evidence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"indexId\": \"<string>\",\n    \"query\": \"<string>\",\n    \"note\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/evidence/log/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"evidence",
												"log",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Add logs as evidence on a case.\n"
									},
									"response": [
										{
											"name": "Returns the newly added logs as evidence.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexId\": \"<string>\",\n    \"query\": \"<string>\",\n    \"note\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/log/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"evidence",
														"log",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"number\": \"<integer>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"statusMessage\": \"<string>\",\n \"text\": \"<string>\",\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"file\": {\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\"\n },\n \"alarm\": {\n  \"alarmId\": \"<integer>\",\n  \"alarmDate\": \"<dateTime>\",\n  \"alarmRuleId\": \"<integer>\",\n  \"alarmRuleName\": \"<string>\",\n  \"dateInserted\": \"<dateTime>\",\n  \"entityId\": \"<integer>\",\n  \"entityName\": \"<string>\",\n  \"riskBasedPriorityMax\": \"<integer>\"\n },\n \"logs\": {\n  \"logCount\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"searchIndexId\": \"<string>\"\n },\n \"userEvents\": {\n  \"identityId\": \"<string>\",\n  \"score\": \"<integer>\",\n  \"eventCount\": \"<integer>\",\n  \"analysisStartDate\": \"<dateTime>\",\n  \"analysisEndDate\": \"<dateTime>\"\n }\n}"
										}
									]
								},
								{
									"name": "Add User Event Evidence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"identityId\": \"<string>\",\n    \"score\": \"<integer>\",\n    \"events\": [\n        \"<object>\",\n        \"<object>\"\n    ],\n    \"analysisStartDate\": \"<dateTime>\",\n    \"analysisEndDate\": \"<dateTime>\",\n    \"earliestEvidenceDate\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/evidence/userEvents/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"evidence",
												"userEvents",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Add user events as evidence on a case."
									},
									"response": [
										{
											"name": "Returns the newly added user events as evidence.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"identityId\": \"<string>\",\n    \"score\": \"<integer>\",\n    \"events\": [\n        \"<object>\",\n        \"<object>\"\n    ],\n    \"analysisStartDate\": \"<dateTime>\",\n    \"analysisEndDate\": \"<dateTime>\",\n    \"earliestEvidenceDate\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/userEvents/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"evidence",
														"userEvents",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"number\": \"<integer>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"statusMessage\": \"<string>\",\n \"text\": \"<string>\",\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"file\": {\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\"\n },\n \"alarm\": {\n  \"alarmId\": \"<integer>\",\n  \"alarmDate\": \"<dateTime>\",\n  \"alarmRuleId\": \"<integer>\",\n  \"alarmRuleName\": \"<string>\",\n  \"dateInserted\": \"<dateTime>\",\n  \"entityId\": \"<integer>\",\n  \"entityName\": \"<string>\",\n  \"riskBasedPriorityMax\": \"<integer>\"\n },\n \"logs\": {\n  \"logCount\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"searchIndexId\": \"<string>\"\n },\n \"userEvents\": {\n  \"identityId\": \"<string>\",\n  \"score\": \"<integer>\",\n  \"eventCount\": \"<integer>\",\n  \"analysisStartDate\": \"<dateTime>\",\n  \"analysisEndDate\": \"<dateTime>\"\n }\n}"
										}
									]
								},
								{
									"name": "Add Note Evidence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/evidence/note/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"evidence",
												"note",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Add a note as evidence on a case."
									},
									"response": [
										{
											"name": "Returns the newly added note as evidence.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/evidence/note/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"evidence",
														"note",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"number\": \"<integer>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"statusMessage\": \"<string>\",\n \"text\": \"<string>\",\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"file\": {\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\"\n },\n \"alarm\": {\n  \"alarmId\": \"<integer>\",\n  \"alarmDate\": \"<dateTime>\",\n  \"alarmRuleId\": \"<integer>\",\n  \"alarmRuleName\": \"<string>\",\n  \"dateInserted\": \"<dateTime>\",\n  \"entityId\": \"<integer>\",\n  \"entityName\": \"<string>\",\n  \"riskBasedPriorityMax\": \"<integer>\"\n },\n \"logs\": {\n  \"logCount\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"searchIndexId\": \"<string>\"\n },\n \"userEvents\": {\n  \"identityId\": \"<string>\",\n  \"score\": \"<integer>\",\n  \"eventCount\": \"<integer>\",\n  \"analysisStartDate\": \"<dateTime>\",\n  \"analysisEndDate\": \"<dateTime>\"\n }\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "logs-index",
							"item": [
								{
									"name": "Get Logs Index",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/logs-index/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"logs-index",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Get the index of log evidence for a case."
									},
									"response": [
										{
											"name": "Returns the status of the log index for this case.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/logs-index/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"logs-index",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"indexId\": \"<uuid>\",\n \"state\": \"<string>\",\n \"message\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateRebuilt\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n}"
										}
									]
								},
								{
									"name": "Update Logs Index",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/logs-index/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"logs-index",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Update the index of log evidence for a case."
									},
									"response": [
										{
											"name": "Returns the status of the log index for this case.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/logs-index/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"logs-index",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"indexId\": \"<uuid>\",\n \"state\": \"<string>\",\n \"message\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateRebuilt\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "playbooks",
							"item": [
								{
									"name": "{pid}",
									"item": [
										{
											"name": "procedures",
											"item": [
												{
													"name": "{prid}",
													"item": [
														{
															"name": "Get Procedure",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/procedures/:prid/",
																	"host": [
																		"{{BaseUrl_Case}}"
																	],
																	"path": [
																		"cases",
																		":id",
																		"playbooks",
																		":pid",
																		"procedures",
																		":prid",
																		""
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<identifier>",
																			"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
																		},
																		{
																			"key": "pid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
																		},
																		{
																			"key": "prid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string."
																		}
																	]
																},
																"description": "Return a procedure on a playbook on a case."
															},
															"response": [
																{
																	"name": "Returns the procedure on a playbook on a case.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/procedures/<uuid>/",
																			"host": [
																				"{{BaseUrl_Case}}"
																			],
																			"path": [
																				"cases",
																				"<identifier>",
																				"playbooks",
																				"<uuid>",
																				"procedures",
																				"<uuid>",
																				""
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"assignee\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"status\": \"<string>\",\n \"dueDate\": \"<dateTime>\",\n \"notes\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n}"
																}
															]
														},
														{
															"name": "Update Procedure",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"assignee\": \"<integer>\",\n    \"notes\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/procedures/:prid/",
																	"host": [
																		"{{BaseUrl_Case}}"
																	],
																	"path": [
																		"cases",
																		":id",
																		"playbooks",
																		":pid",
																		"procedures",
																		":prid",
																		""
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<identifier>",
																			"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
																		},
																		{
																			"key": "pid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
																		},
																		{
																			"key": "prid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string."
																		}
																	]
																},
																"description": "Update a procedure on a playbook on a case. For example, update the due date or status of a procedure."
															},
															"response": [
																{
																	"name": "Returns the updated procedure.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"assignee\": \"<integer>\",\n    \"notes\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/procedures/<uuid>/",
																			"host": [
																				"{{BaseUrl_Case}}"
																			],
																			"path": [
																				"cases",
																				"<identifier>",
																				"playbooks",
																				"<uuid>",
																				"procedures",
																				"<uuid>",
																				""
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"assignee\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"status\": \"<string>\",\n \"dueDate\": \"<dateTime>\",\n \"notes\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n}"
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "List Procedures",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "orderBy",
																"value": "ordering",
																"description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook."
															},
															{
																"key": "direction",
																"value": "asc",
																"description": "Sorts results in ascending or descending order."
															}
														],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/procedures/?name=<string>&description=<string>&status=<string>,<string>&assignee=<integer>,<integer>",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																":id",
																"playbooks",
																":pid",
																"procedures",
																""
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "Filter results that have the specified name."
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "Filter results that have the specified description."
																},
																{
																	"key": "status",
																	"value": "<string>,<string>",
																	"description": "Filter results that have the specified procedure status."
																},
																{
																	"key": "assignee",
																	"value": "<integer>,<integer>",
																	"description": "Filter results that have a specific procedure assignee, by person numbers. Note that you can specify the literal value `null` to filter for unassigned procedures."
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<identifier>",
																	"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
																},
																{
																	"key": "pid",
																	"value": "<uuid>",
																	"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
																}
															]
														},
														"description": "Return a list of procedures on a playbook on a case."
													},
													"response": [
														{
															"name": "Returns the procedures of a specific playbook on a case.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
																			"type": "text/plain"
																		},
																		"key": "orderBy",
																		"value": "ordering"
																	},
																	{
																		"description": {
																			"content": "Sorts results in ascending or descending order.",
																			"type": "text/plain"
																		},
																		"key": "direction",
																		"value": "asc"
																	}
																],
																"url": {
																	"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/procedures/?name=<string>&description=<string>&status=<string>,<string>&assignee=<integer>,<integer>",
																	"host": [
																		"{{BaseUrl_Case}}"
																	],
																	"path": [
																		"cases",
																		"<identifier>",
																		"playbooks",
																		"<uuid>",
																		"procedures",
																		""
																	],
																	"query": [
																		{
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "description",
																			"value": "<string>"
																		},
																		{
																			"key": "status",
																			"value": "<string>,<string>"
																		},
																		{
																			"key": "assignee",
																			"value": "<integer>,<integer>"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"assignee\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"notes\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n },\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"assignee\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"notes\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n }\n]"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "files",
											"item": [
												{
													"name": "{fid}",
													"item": [
														{
															"name": "Get Attachment",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/files/:fid/",
																	"host": [
																		"{{BaseUrl_Case}}"
																	],
																	"path": [
																		"cases",
																		":id",
																		"playbooks",
																		":pid",
																		"files",
																		":fid",
																		""
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<identifier>",
																			"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
																		},
																		{
																			"key": "pid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
																		},
																		{
																			"key": "fid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the file, as an RFC 4122 formatted string."
																		}
																	]
																},
																"description": "Return an attachment for a playbook on a case."
															},
															"response": [
																{
																	"name": "Returns the playbook attachment file metadata.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/files/<uuid>/",
																			"host": [
																				"{{BaseUrl_Case}}"
																			],
																			"path": [
																				"cases",
																				"<identifier>",
																				"playbooks",
																				"<uuid>",
																				"files",
																				"<uuid>",
																				""
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"<uuid>\",\n \"dateCreated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"status\": \"<string>\",\n \"name\": \"<string>\",\n \"size\": \"<integer>\",\n \"mimeType\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Download Attachment",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/files/:fid/contents/",
																	"host": [
																		"{{BaseUrl_Case}}"
																	],
																	"path": [
																		"cases",
																		":id",
																		"playbooks",
																		":pid",
																		"files",
																		":fid",
																		"contents",
																		""
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<identifier>",
																			"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
																		},
																		{
																			"key": "pid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
																		},
																		{
																			"key": "fid",
																			"value": "<uuid>",
																			"description": "Unique identifier for the file, as an RFC 4122 formatted string."
																		}
																	]
																},
																"description": "Download a file attachment for a playbook on a case."
															},
															"response": [
																{
																	"name": "Returns the downloaded file.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/files/<uuid>/contents/",
																			"host": [
																				"{{BaseUrl_Case}}"
																			],
																			"path": [
																				"cases",
																				"<identifier>",
																				"playbooks",
																				"<uuid>",
																				"files",
																				"<uuid>",
																				"contents",
																				""
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "\"<binary>\""
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "List Attachments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "orderBy",
																"value": "name",
																"description": "Sorts the returned results by the specified field."
															},
															{
																"key": "direction",
																"value": "asc",
																"description": "Sorts results in ascending or descending order."
															}
														],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/files/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																":id",
																"playbooks",
																":pid",
																"files",
																""
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<identifier>",
																	"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
																},
																{
																	"key": "pid",
																	"value": "<uuid>",
																	"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
																}
															]
														},
														"description": "Return all attachments for a playbook on a case."
													},
													"response": [
														{
															"name": "Returns a list of playbook attachment file metadata.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Sorts the returned results by the specified field.",
																			"type": "text/plain"
																		},
																		"key": "orderBy",
																		"value": "name"
																	},
																	{
																		"description": {
																			"content": "Sorts results in ascending or descending order.",
																			"type": "text/plain"
																		},
																		"key": "direction",
																		"value": "asc"
																	}
																],
																"url": {
																	"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/files/",
																	"host": [
																		"{{BaseUrl_Case}}"
																	],
																	"path": [
																		"cases",
																		"<identifier>",
																		"playbooks",
																		"<uuid>",
																		"files",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"mimeType\": \"<string>\"\n },\n {\n  \"id\": \"<uuid>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"mimeType\": \"<string>\"\n }\n]"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get Playbook",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"playbooks",
														":pid",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "pid",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
														}
													]
												},
												"description": "Return a playbook on a case."
											},
											"response": [
												{
													"name": "Returns the requested playbook.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"playbooks",
																"<uuid>",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"originalPlaybookId\": \"<uuid>\",\n \"dateAdded\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"procedures\": {\n  \"total\": \"<integer>\",\n  \"notCompleted\": \"<integer>\",\n  \"completed\": \"<integer>\",\n  \"skipped\": \"<integer>\",\n  \"pastDue\": \"<integer>\"\n }\n}"
												}
											]
										},
										{
											"name": "Update Playbook",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pinned\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"playbooks",
														":pid",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "pid",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
														}
													]
												},
												"description": "Update a playbook on a case."
											},
											"response": [
												{
													"name": "Returns the updated playbook.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"pinned\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"playbooks",
																"<uuid>",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"originalPlaybookId\": \"<uuid>\",\n \"dateAdded\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"procedures\": {\n  \"total\": \"<integer>\",\n  \"notCompleted\": \"<integer>\",\n  \"completed\": \"<integer>\",\n  \"skipped\": \"<integer>\",\n  \"pastDue\": \"<integer>\"\n }\n}"
												}
											]
										},
										{
											"name": "Remove Playbook",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/:pid/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														":id",
														"playbooks",
														":pid",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<identifier>",
															"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
														},
														{
															"key": "pid",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string."
														}
													]
												},
												"description": "Remove a playbook from a case."
											},
											"response": [
												{
													"name": "No body is returned.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/<uuid>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"cases",
																"<identifier>",
																"playbooks",
																"<uuid>",
																""
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<object>\""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "List Playbooks",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"playbooks",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Return a list of playbooks attached to a case."
									},
									"response": [
										{
											"name": "Returns a list of playbooks attached to a case.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"playbooks",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"originalPlaybookId\": \"<uuid>\",\n  \"dateAdded\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"pinned\": \"<boolean>\",\n  \"datePinned\": \"<dateTime>\",\n  \"procedures\": {\n   \"total\": \"<integer>\",\n   \"notCompleted\": \"<integer>\",\n   \"completed\": \"<integer>\",\n   \"skipped\": \"<integer>\",\n   \"pastDue\": \"<integer>\"\n  }\n },\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"originalPlaybookId\": \"<uuid>\",\n  \"dateAdded\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"pinned\": \"<boolean>\",\n  \"datePinned\": \"<dateTime>\",\n  \"procedures\": {\n   \"total\": \"<integer>\",\n   \"notCompleted\": \"<integer>\",\n   \"completed\": \"<integer>\",\n   \"skipped\": \"<integer>\",\n   \"pastDue\": \"<integer>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Add Playbook",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<uuid>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/:id/playbooks/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												":id",
												"playbooks",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<identifier>",
													"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
												}
											]
										},
										"description": "Add a playbook to case."
									},
									"response": [
										{
											"name": "Returns the added playbook.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<uuid>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"playbooks",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"originalPlaybookId\": \"<uuid>\",\n \"dateAdded\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"pinned\": \"<boolean>\",\n \"datePinned\": \"<dateTime>\",\n \"procedures\": {\n  \"total\": \"<integer>\",\n  \"notCompleted\": \"<integer>\",\n  \"completed\": \"<integer>\",\n  \"skipped\": \"<integer>\",\n  \"pastDue\": \"<integer>\"\n }\n}"
										},
										{
											"name": "Error returned when the playbook already exists on the case.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<uuid>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/cases/<identifier>/playbooks/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"cases",
														"<identifier>",
														"playbooks",
														""
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"statusCode\": \"<integer>\",\n \"message\": \"<string>\",\n \"details\": \"<string>\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Case",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/cases/:id/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"cases",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "1762",
											"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
										}
									]
								},
								"description": "Returns the summary of a case by Id."
							},
							"response": [
								{
									"name": "The returned case.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/<identifier>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												"<identifier>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update Case",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"externalId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"dueDate\": \"<dateTime>\",\n    \"summary\": \"<string>\",\n    \"resolution\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/cases/:id/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"cases",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<identifier>",
											"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
										}
									]
								},
								"description": "Update case information. For example, the case name, priority, and due date."
							},
							"response": [
								{
									"name": "Returns the updated case.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"externalId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"dueDate\": \"<dateTime>\",\n    \"summary\": \"<string>\",\n    \"resolution\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/<identifier>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												"<identifier>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "List Case History *",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "offset",
										"value": "<integer>",
										"description": "Number of results to skip when paging."
									},
									{
										"key": "count",
										"value": 25,
										"description": "Maximum number of results to be returned when paging."
									},
									{
										"key": "direction",
										"value": "desc",
										"description": "Sorts results in ascending or descending order."
									},
									{
										"key": "orderBy",
										"value": "actionDate",
										"description": "Sorts the returned results by the specified field."
									},
									{
										"key": "createdAfter",
										"value": "<dateTime>",
										"description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string."
									},
									{
										"key": "createdBefore",
										"value": "<dateTime>",
										"description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string."
									}
								],
								"url": {
									"raw": "{{BaseUrl_Case}}/cases/:id/history/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"cases",
										":id",
										"history",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<identifier>",
											"description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number."
										}
									]
								},
								"description": "Return history for a specific case. Supports pagination.\n\n  \\* *unstable (may change in a future release)*\n"
							},
							"response": [
								{
									"name": "Returns a list of history for a specific case.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Number of results to skip when paging.",
													"type": "text/plain"
												},
												"key": "offset",
												"value": "<integer>"
											},
											{
												"description": {
													"content": "Maximum number of results to be returned when paging.",
													"type": "text/plain"
												},
												"key": "count",
												"value": 25
											},
											{
												"description": {
													"content": "Sorts results in ascending or descending order.",
													"type": "text/plain"
												},
												"key": "direction",
												"value": "desc"
											},
											{
												"description": {
													"content": "Sorts the returned results by the specified field.",
													"type": "text/plain"
												},
												"key": "orderBy",
												"value": "actionDate"
											},
											{
												"description": {
													"content": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
													"type": "text/plain"
												},
												"key": "createdAfter",
												"value": "<dateTime>"
											},
											{
												"description": {
													"content": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
													"type": "text/plain"
												},
												"key": "createdBefore",
												"value": "<dateTime>"
											}
										],
										"url": {
											"raw": "{{BaseUrl_Case}}/cases/<identifier>/history/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"cases",
												"<identifier>",
												"history",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"date\": \"<dateTime>\",\n  \"actor\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"action\": \"<string>\",\n  \"resources\": [\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"id\": \"<uuid>\",\n  \"date\": \"<dateTime>\",\n  \"actor\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"action\": \"<string>\",\n  \"resources\": [\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   }\n  ]\n }\n]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List Cases",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "offset",
								"value": "<integer>",
								"description": "Number of results to skip when paging."
							},
							{
								"key": "count",
								"value": 25,
								"description": "Maximum number of results to be returned when paging."
							},
							{
								"key": "orderBy",
								"value": "dateCreated",
								"description": "Sorts the returned results by the specified field."
							},
							{
								"key": "direction",
								"value": "asc",
								"description": "Sorts results in ascending or descending order."
							},
							{
								"key": "updatedAfter",
								"value": "<dateTime>",
								"description": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string."
							},
							{
								"key": "updatedBefore",
								"value": "<dateTime>",
								"description": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string."
							},
							{
								"key": "createdAfter",
								"value": "<dateTime>",
								"description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string."
							},
							{
								"key": "createdBefore",
								"value": "<dateTime>",
								"description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string."
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/cases/?dueBefore=<dateTime>&priority=<integer>,<integer>&statusNumber=<integer>,<integer>&ownerNumber=<integer>,<integer>&collaboratorNumber=<integer>&tagNumber=<integer>,<integer>&text=<string>&evidenceType=<string>,<string>&referenceId=<string>&externalId=<string>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"cases",
								""
							],
							"query": [
								{
									"key": "dueBefore",
									"value": "<dateTime>",
									"description": "Filter results that have a due date before the specified date. Must be an RFC 3339 formatted string."
								},
								{
									"key": "priority",
									"value": "<integer>,<integer>",
									"description": "Filter results that have a specific case priority."
								},
								{
									"key": "statusNumber",
									"value": "<integer>,<integer>",
									"description": "Filter results that have a specific case status."
								},
								{
									"key": "ownerNumber",
									"value": "<integer>,<integer>",
									"description": "Filter results that have a specific case owner, by person numbers."
								},
								{
									"key": "collaboratorNumber",
									"value": "<integer>",
									"description": "Filter results that have a specific case collaborator, by person number."
								},
								{
									"key": "tagNumber",
									"value": "<integer>,<integer>",
									"description": "Filter results that are tagged, by tag numbers."
								},
								{
									"key": "text",
									"value": "<string>",
									"description": "Filter results that have a case number or name that contains the specified value."
								},
								{
									"key": "evidenceType",
									"value": "<string>,<string>",
									"description": "Filter results that have evidence of the specified type."
								},
								{
									"key": "referenceId",
									"value": "<string>",
									"description": "Filter results that have evidence with the given reference identifier."
								},
								{
									"key": "externalId",
									"value": "<string>",
									"description": "Filter results that have the specified unique, external identifier."
								}
							]
						},
						"description": "Returns a filtered list of cases. Supports pagination."
					},
					"response": [
						{
							"name": "Returns the filtered list of cases.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Number of results to skip when paging.",
											"type": "text/plain"
										},
										"key": "offset",
										"value": "<integer>"
									},
									{
										"description": {
											"content": "Maximum number of results to be returned when paging.",
											"type": "text/plain"
										},
										"key": "count",
										"value": 25
									},
									{
										"description": {
											"content": "Sorts the returned results by the specified field.",
											"type": "text/plain"
										},
										"key": "orderBy",
										"value": "dateCreated"
									},
									{
										"description": {
											"content": "Sorts results in ascending or descending order.",
											"type": "text/plain"
										},
										"key": "direction",
										"value": "asc"
									},
									{
										"description": {
											"content": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "updatedAfter",
										"value": "<dateTime>"
									},
									{
										"description": {
											"content": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "updatedBefore",
										"value": "<dateTime>"
									},
									{
										"description": {
											"content": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "createdAfter",
										"value": "<dateTime>"
									},
									{
										"description": {
											"content": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "createdBefore",
										"value": "<dateTime>"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Case}}/cases/?dueBefore=<dateTime>&priority=<integer>,<integer>&statusNumber=<integer>,<integer>&ownerNumber=<integer>,<integer>&collaboratorNumber=<integer>&tagNumber=<integer>,<integer>&text=<string>&evidenceType=<string>,<string>&referenceId=<string>&externalId=<string>",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"cases",
										""
									],
									"query": [
										{
											"key": "dueBefore",
											"value": "<dateTime>"
										},
										{
											"key": "priority",
											"value": "<integer>,<integer>"
										},
										{
											"key": "statusNumber",
											"value": "<integer>,<integer>"
										},
										{
											"key": "ownerNumber",
											"value": "<integer>,<integer>"
										},
										{
											"key": "collaboratorNumber",
											"value": "<integer>"
										},
										{
											"key": "tagNumber",
											"value": "<integer>,<integer>"
										},
										{
											"key": "text",
											"value": "<string>"
										},
										{
											"key": "evidenceType",
											"value": "<string>,<string>"
										},
										{
											"key": "referenceId",
											"value": "<string>"
										},
										{
											"key": "externalId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Offset",
									"value": "<integer>",
									"description": "The number of cases skipped."
								},
								{
									"key": "X-Count",
									"value": "<integer>",
									"description": "The number of cases requested."
								},
								{
									"key": "X-Results-Returned",
									"value": "<integer>",
									"description": "The number of cases returned."
								},
								{
									"key": "X-Total-Count",
									"value": "<integer>",
									"description": "The total number of cases in the system."
								},
								{
									"key": "Last-Modified",
									"value": "<dateTime>",
									"description": "The date and time the most recently modified case in the collection was last updated, as an RFC 3339 formatted string."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"number\": \"<integer>\",\n  \"externalId\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateClosed\": \"<dateTime>\",\n  \"owner\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"name\": \"<string>\",\n  \"status\": {\n   \"name\": \"<string>\",\n   \"number\": \"<integer>\"\n  },\n  \"priority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"resolution\": \"<string>\",\n  \"resolutionDateUpdated\": \"<dateTime>\",\n  \"resolutionLastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"summary\": \"<string>\",\n  \"entity\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"collaborators\": [\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   }\n  ],\n  \"tags\": [\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   }\n  ]\n },\n {\n  \"id\": \"<uuid>\",\n  \"number\": \"<integer>\",\n  \"externalId\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateClosed\": \"<dateTime>\",\n  \"owner\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"name\": \"<string>\",\n  \"status\": {\n   \"name\": \"<string>\",\n   \"number\": \"<integer>\"\n  },\n  \"priority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"resolution\": \"<string>\",\n  \"resolutionDateUpdated\": \"<dateTime>\",\n  \"resolutionLastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"summary\": \"<string>\",\n  \"entity\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"collaborators\": [\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   }\n  ],\n  \"tags\": [\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Create Case",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"externalId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"summary\": \"<string>\",\n    \"entityId\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Case}}/cases/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"cases",
								""
							]
						},
						"description": "Create a new case."
					},
					"response": [
						{
							"name": "Returns the newly created case.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"externalId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"summary\": \"<string>\",\n    \"entityId\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/cases/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"cases",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<uuid>\",\n \"number\": \"<integer>\",\n \"externalId\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"dateClosed\": \"<dateTime>\",\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"name\": \"<string>\",\n \"status\": {\n  \"name\": \"<string>\",\n  \"number\": \"<integer>\"\n },\n \"priority\": \"<integer>\",\n \"dueDate\": \"<dateTime>\",\n \"resolution\": \"<string>\",\n \"resolutionDateUpdated\": \"<dateTime>\",\n \"resolutionLastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"summary\": \"<string>\",\n \"entity\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"collaborators\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n ],\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "{number}",
					"item": [
						{
							"name": "Get Tag",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/tags/:number/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"tags",
										":number",
										""
									],
									"variable": [
										{
											"key": "number",
											"value": "<integer>",
											"description": "Unique, numeric identifier for the tag."
										}
									]
								},
								"description": "Return a tag."
							},
							"response": [
								{
									"name": "Returns the specified tag.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/tags/<integer>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"tags",
												"<integer>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"number\": \"<integer>\",\n \"text\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n}"
								}
							]
						},
						{
							"name": "Delete Tag",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/tags/:number/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"tags",
										":number",
										""
									],
									"variable": [
										{
											"key": "number",
											"value": "<integer>",
											"description": "Unique, numeric identifier for the tag."
										}
									]
								},
								"description": "Delete a tag. The tag is removed from any cases to which it had been added."
							},
							"response": [
								{
									"name": "No body is returned.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/tags/<integer>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"tags",
												"<integer>",
												""
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "offset",
								"value": "<integer>",
								"description": "Number of results to skip when paging."
							},
							{
								"key": "count",
								"value": 25,
								"description": "Maximum number of results to be returned when paging."
							},
							{
								"key": "direction",
								"value": "asc",
								"description": "Sorts results in ascending or descending order."
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/tags/?tag=<string>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"tags",
								""
							],
							"query": [
								{
									"key": "tag",
									"value": "<string>",
									"description": "Filter results that have a tag name that contains the specified value."
								}
							]
						},
						"description": "Return a list of tags. Supports pagination."
					},
					"response": [
						{
							"name": "Returns a tag.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Number of results to skip when paging.",
											"type": "text/plain"
										},
										"key": "offset",
										"value": "<integer>"
									},
									{
										"description": {
											"content": "Maximum number of results to be returned when paging.",
											"type": "text/plain"
										},
										"key": "count",
										"value": 25
									},
									{
										"description": {
											"content": "Sorts results in ascending or descending order.",
											"type": "text/plain"
										},
										"key": "direction",
										"value": "asc"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Case}}/tags/?tag=<string>",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"tags",
										""
									],
									"query": [
										{
											"key": "tag",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"number\": \"<integer>\",\n  \"text\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n },\n {\n  \"number\": \"<integer>\",\n  \"text\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Create Tag",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Case}}/tags/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"tags",
								""
							]
						},
						"description": "Create a new tag."
					},
					"response": [
						{
							"name": "Returns the newly created tag.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/tags/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"tags",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"number\": \"<integer>\",\n \"text\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "persons",
			"item": [
				{
					"name": "List People *",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "offset",
								"value": "<integer>",
								"description": "Number of results to skip when paging."
							},
							{
								"key": "count",
								"value": 25,
								"description": "Maximum number of results to be returned when paging."
							},
							{
								"key": "direction",
								"value": "asc",
								"description": "Sorts results in ascending or descending order."
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/persons/?name=<string>&onlyUsers=<boolean>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"persons",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter results that have a person name that contains the specified value."
								},
								{
									"key": "onlyUsers",
									"value": "<boolean>",
									"description": "Filter results to only persons that have a login."
								}
							]
						},
						"description": "Return a list of people configured in the system. Used for\ncollaborators and notifications. Supports pagination.\n\n  \\* *unsupported endpoint*\n"
					},
					"response": [
						{
							"name": "Returns a list of people.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Number of results to skip when paging.",
											"type": "text/plain"
										},
										"key": "offset",
										"value": "<integer>"
									},
									{
										"description": {
											"content": "Maximum number of results to be returned when paging.",
											"type": "text/plain"
										},
										"key": "count",
										"value": 25
									},
									{
										"description": {
											"content": "Sorts results in ascending or descending order.",
											"type": "text/plain"
										},
										"key": "direction",
										"value": "asc"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Case}}/persons/?name=<string>&onlyUsers=<boolean>",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"persons",
										""
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "onlyUsers",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get Person *",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl_Case}}/persons/:number/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"persons",
								":number",
								""
							],
							"variable": [
								{
									"key": "number",
									"value": "<integer>",
									"description": "Unique, numeric identifier for the person."
								}
							]
						},
						"description": "Return a person object.\n\n  \\* *unsupported endpoint*\n"
					},
					"response": [
						{
							"name": "Returns a person object.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/persons/<integer>/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"persons",
										"<integer>",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"number\": \"<integer>\",\n \"name\": \"<string>\",\n \"disabled\": \"<boolean>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "playbooks",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "files",
							"item": [
								{
									"name": "{fid}",
									"item": [
										{
											"name": "Get Attachment",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/:id/files/:fid/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														":id",
														"files",
														":fid",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
														},
														{
															"key": "fid",
															"value": "<uuid>",
															"description": "Unique identifier for the file, as an RFC 4122 formatted string."
														}
													]
												},
												"description": "Return the metadata for a specific playbook attachment."
											},
											"response": [
												{
													"name": "Returns the playbook attachment file metadata.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/files/<uuid>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"playbooks",
																"<uuid>",
																"files",
																"<uuid>",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"<uuid>\",\n \"dateCreated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"status\": \"<string>\",\n \"name\": \"<string>\",\n \"size\": \"<integer>\",\n \"mimeType\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Link Attachment",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/:id/files/:fid/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														":id",
														"files",
														":fid",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
														},
														{
															"key": "fid",
															"value": "<uuid>",
															"description": "Unique identifier for the file, as an RFC 4122 formatted string."
														}
													]
												},
												"description": "Add a file to a playbook as an attachment."
											},
											"response": [
												{
													"name": "No body is returned.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/files/<uuid>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"playbooks",
																"<uuid>",
																"files",
																"<uuid>",
																""
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<object>\""
												}
											]
										},
										{
											"name": "Unlink Attachment",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/:id/files/:fid/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														":id",
														"files",
														":fid",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
														},
														{
															"key": "fid",
															"value": "<uuid>",
															"description": "Unique identifier for the file, as an RFC 4122 formatted string."
														}
													]
												},
												"description": "Remove a file attachment from a playbook."
											},
											"response": [
												{
													"name": "No body is returned.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/files/<uuid>/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"playbooks",
																"<uuid>",
																"files",
																"<uuid>",
																""
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<object>\""
												}
											]
										},
										{
											"name": "Download Attachment",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/:id/files/:fid/contents/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														":id",
														"files",
														":fid",
														"contents",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
														},
														{
															"key": "fid",
															"value": "<uuid>",
															"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
														}
													]
												},
												"description": "Download a file attachment on a playbook."
											},
											"response": [
												{
													"name": "Returns the downloaded file.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/files/<uuid>/contents/",
															"host": [
																"{{BaseUrl_Case}}"
															],
															"path": [
																"playbooks",
																"<uuid>",
																"files",
																"<uuid>",
																"contents",
																""
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"<binary>\""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "List Attachments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "orderBy",
												"value": "name",
												"description": "Sorts the returned results by the specified field."
											},
											{
												"key": "direction",
												"value": "asc",
												"description": "Sorts results in ascending or descending order."
											}
										],
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/:id/files/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												":id",
												"files",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
												}
											]
										},
										"description": "List all attachments for a given playbook."
									},
									"response": [
										{
											"name": "Returns the playbook attachment file details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Sorts the returned results by the specified field.",
															"type": "text/plain"
														},
														"key": "orderBy",
														"value": "name"
													},
													{
														"description": {
															"content": "Sorts results in ascending or descending order.",
															"type": "text/plain"
														},
														"key": "direction",
														"value": "asc"
													}
												],
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/files/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														"<uuid>",
														"files",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"mimeType\": \"<string>\"\n },\n {\n  \"id\": \"<uuid>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"createdBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"mimeType\": \"<string>\"\n }\n]"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "procedures",
							"item": [
								{
									"name": "List Procedures",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "orderBy",
												"value": "ordering",
												"description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook."
											},
											{
												"key": "direction",
												"value": "asc",
												"description": "Sorts results in ascending or descending order."
											}
										],
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/:id/procedures/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												":id",
												"procedures",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
												}
											]
										},
										"description": "Return a list of procedures for a playbook."
									},
									"response": [
										{
											"name": "Returns a list of procedures for a specific playbook.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
															"type": "text/plain"
														},
														"key": "orderBy",
														"value": "ordering"
													},
													{
														"description": {
															"content": "Sorts results in ascending or descending order.",
															"type": "text/plain"
														},
														"key": "direction",
														"value": "asc"
													}
												],
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/procedures/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														"<uuid>",
														"procedures",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "<string>",
													"description": "Entity Tag for the playbook's procedures, as described in RFC 7232."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueWithinSeconds\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\"\n },\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueWithinSeconds\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\"\n }\n]"
										}
									]
								},
								{
									"name": "Update Procedures",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "If-Match",
												"value": "<string>",
												"description": "Ensure that the procedures on the server do not have changes that will be overwritten\nby this request. Can be used to prevent outdated updates to procedures that would\noverwrite other changes.\n"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"dueWithinSeconds\": \"<integer>\"\n    },\n    {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"dueWithinSeconds\": \"<integer>\"\n    }\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/:id/procedures/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												":id",
												"procedures",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
												}
											]
										},
										"description": "Add, update, remove, or reorder playbook procedures. The procedures\nspecified in the request body will replace all existing procedures\nfor the playbook.\n\n### Adding/Updating Procedures\nIn the request body, any procedure that does *not* have an `Id` will\nbe assigned an `Id`, created, and then added to the resulting procedure list.\n\nProcedures in the request body that *do* have an `Id` will be\n\"upserted,\" that is, if a procedure with that `Id` exists, it will be\nupdated to match the given contents and ordering; if it does not exist,\nit will be added in the given order.\n\n### Removing/Reordering Procedures\nAny existing procedure that is not listed in the request body will\nbe removed.\n\nThe order of the list in the request body will become the\nprocedure order.\n"
									},
									"response": [
										{
											"name": "Returns the updated procedures.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Ensure that the procedures on the server do not have changes that will be overwritten\nby this request. Can be used to prevent outdated updates to procedures that would\noverwrite other changes.\n",
															"type": "text/plain"
														},
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"dueWithinSeconds\": \"<integer>\"\n    },\n    {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"dueWithinSeconds\": \"<integer>\"\n    }\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/procedures/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														"<uuid>",
														"procedures",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueWithinSeconds\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\"\n },\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueWithinSeconds\": \"<integer>\",\n  \"dateCreated\": \"<dateTime>\"\n }\n]"
										}
									]
								},
								{
									"name": "Get Procedure",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/:id/procedures/:pid/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												":id",
												"procedures",
												":pid",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
												},
												{
													"key": "pid",
													"value": "<uuid>",
													"description": "Unique identifier for the procedure, as an RFC 4122 formatted string."
												}
											]
										},
										"description": "Return a procedure with a specific Id."
									},
									"response": [
										{
											"name": "Returns the specified procedure.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/procedures/<uuid>/",
													"host": [
														"{{BaseUrl_Case}}"
													],
													"path": [
														"playbooks",
														"<uuid>",
														"procedures",
														"<uuid>",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"dueWithinSeconds\": \"<integer>\",\n \"dateCreated\": \"<dateTime>\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Playbook",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/:id/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
										}
									]
								},
								"description": "Get a playbook by Id."
							},
							"response": [
								{
									"name": "Returns the specified playbook.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												"<uuid>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "<string>",
											"description": "Entity Tag for the resulting playbook, as described in RFC 7232."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"permissions\": {\n  \"read\": \"<string>\",\n  \"write\": \"<string>\"\n },\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"retired\": \"<boolean>\",\n \"entities\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update Playbook",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "If-None-Match",
										"value": "<string>",
										"description": "Ensure that no playbook exists with the given Id. This can be used to conditionally\ncreate a new playbook with the specified Id only as long as one does not already exist.\n"
									},
									{
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"permissions\": {\n        \"read\": \"<string>\",\n        \"write\": \"<string>\"\n    },\n    \"entities\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"tags\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/:id/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
										}
									]
								},
								"description": "Update an existing playbook or create a new one with the specified Id if one does not exist."
							},
							"response": [
								{
									"name": "Returns the updated playbook.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Ensure that no playbook exists with the given Id. This can be used to conditionally\ncreate a new playbook with the specified Id only as long as one does not already exist.\n",
													"type": "text/plain"
												},
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"permissions\": {\n        \"read\": \"<string>\",\n        \"write\": \"<string>\"\n    },\n    \"entities\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"tags\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												"<uuid>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "<string>",
											"description": "Entity Tag for the resulting playbook, as described in RFC 7232."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"permissions\": {\n  \"read\": \"<string>\",\n  \"write\": \"<string>\"\n },\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"retired\": \"<boolean>\",\n \"entities\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
								},
								{
									"name": "Returns the newly created playbook.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Ensure that no playbook exists with the given Id. This can be used to conditionally\ncreate a new playbook with the specified Id only as long as one does not already exist.\n",
													"type": "text/plain"
												},
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"permissions\": {\n        \"read\": \"<string>\",\n        \"write\": \"<string>\"\n    },\n    \"entities\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"tags\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												"<uuid>",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "<string>",
											"description": "Entity Tag for the resulting playbook, as described in RFC 7232."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"permissions\": {\n  \"read\": \"<string>\",\n  \"write\": \"<string>\"\n },\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"retired\": \"<boolean>\",\n \"entities\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update Playbook (Partial)",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "<string>",
										"description": "Ensure that the playbook on the server does not have changes that will be overwritten by this request.\nThis can be used to prevent outdated updates to the playbook that would overwrite other changes.\n"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"permissions\": {\n        \"read\": \"<string>\",\n        \"write\": \"<string>\"\n    },\n    \"entities\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"owner\": \"<integer>\",\n    \"retired\": \"<boolean>\",\n    \"tags\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/:id/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
										}
									]
								},
								"description": "Update some or all of the properties of a playbook. Omitted properties will remain unchanged."
							},
							"response": [
								{
									"name": "Returns the updated playbook.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Ensure that the playbook on the server does not have changes that will be overwritten by this request.\nThis can be used to prevent outdated updates to the playbook that would overwrite other changes.\n",
													"type": "text/plain"
												},
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"permissions\": {\n        \"read\": \"<string>\",\n        \"write\": \"<string>\"\n    },\n    \"entities\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"owner\": \"<integer>\",\n    \"retired\": \"<boolean>\",\n    \"tags\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												"<uuid>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "<string>",
											"description": "Entity Tag for the resulting playbook, as described in RFC 7232."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"permissions\": {\n  \"read\": \"<string>\",\n  \"write\": \"<string>\"\n },\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"retired\": \"<boolean>\",\n \"entities\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Delete Playbook",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/:id/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
										}
									]
								},
								"description": "Delete a playbook from the system."
							},
							"response": [
								{
									"name": "No body is returned.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												"<uuid>",
												""
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						},
						{
							"name": "Export Playbook",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/:id/export/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										":id",
										"export",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "Unique identifier for the playbook, as an RFC 4122 formatted string."
										}
									]
								},
								"description": "Export a playbook along with attachments and procedures."
							},
							"response": [
								{
									"name": "Returns the exported playbook attachments and procedures.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Case}}/playbooks/<uuid>/export/",
											"host": [
												"{{BaseUrl_Case}}"
											],
											"path": [
												"playbooks",
												"<uuid>",
												"export",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<binary>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List Playbooks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "offset",
								"value": "<integer>",
								"description": "Number of results to skip when paging."
							},
							{
								"key": "count",
								"value": 25,
								"description": "Maximum number of results to be returned when paging."
							},
							{
								"key": "orderBy",
								"value": "dateCreated",
								"description": "Sorts the returned results by the specified field."
							},
							{
								"key": "direction",
								"value": "asc",
								"description": "Sorts results in ascending or descending order."
							},
							{
								"key": "updatedAfter",
								"value": "<dateTime>",
								"description": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string."
							},
							{
								"key": "updatedBefore",
								"value": "<dateTime>",
								"description": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string."
							},
							{
								"key": "createdAfter",
								"value": "<dateTime>",
								"description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string."
							},
							{
								"key": "createdBefore",
								"value": "<dateTime>",
								"description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string."
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/playbooks/?playbook=<string>&ownerNumber=<integer>,<integer>&retired=false&tagNumber=<integer>,<integer>&entityNumber=<integer>,<integer>&readPermissionLevel=<string>,<string>&writePermissionLevel=<string>,<string>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"playbooks",
								""
							],
							"query": [
								{
									"key": "playbook",
									"value": "<string>",
									"description": "Filter results that have a playbook name that contains the specified value."
								},
								{
									"key": "ownerNumber",
									"value": "<integer>,<integer>",
									"description": "Filter results that have a specific case owner, by person numbers."
								},
								{
									"key": "retired",
									"value": "false",
									"description": "Filter results by playbook retired status. Defaults to returning only non-retired playbooks."
								},
								{
									"key": "tagNumber",
									"value": "<integer>,<integer>",
									"description": "Filter results that are tagged, by tag numbers."
								},
								{
									"key": "entityNumber",
									"value": "<integer>,<integer>",
									"description": "Filter results by entity numbers."
								},
								{
									"key": "readPermissionLevel",
									"value": "<string>,<string>",
									"description": "Filter results that have the specified read permission levels."
								},
								{
									"key": "writePermissionLevel",
									"value": "<string>,<string>",
									"description": "Filter results that have the specified write permission levels."
								}
							]
						},
						"description": "Return a filtered list of playbooks. Supports pagination."
					},
					"response": [
						{
							"name": "Returns a list of playbooks that match the specified filters.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Number of results to skip when paging.",
											"type": "text/plain"
										},
										"key": "offset",
										"value": "<integer>"
									},
									{
										"description": {
											"content": "Maximum number of results to be returned when paging.",
											"type": "text/plain"
										},
										"key": "count",
										"value": 25
									},
									{
										"description": {
											"content": "Sorts the returned results by the specified field.",
											"type": "text/plain"
										},
										"key": "orderBy",
										"value": "dateCreated"
									},
									{
										"description": {
											"content": "Sorts results in ascending or descending order.",
											"type": "text/plain"
										},
										"key": "direction",
										"value": "asc"
									},
									{
										"description": {
											"content": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "updatedAfter",
										"value": "<dateTime>"
									},
									{
										"description": {
											"content": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "updatedBefore",
										"value": "<dateTime>"
									},
									{
										"description": {
											"content": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "createdAfter",
										"value": "<dateTime>"
									},
									{
										"description": {
											"content": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
											"type": "text/plain"
										},
										"key": "createdBefore",
										"value": "<dateTime>"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/?playbook=<string>&ownerNumber=<integer>,<integer>&retired=false&tagNumber=<integer>,<integer>&entityNumber=<integer>,<integer>&readPermissionLevel=<string>,<string>&writePermissionLevel=<string>,<string>",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										""
									],
									"query": [
										{
											"key": "playbook",
											"value": "<string>"
										},
										{
											"key": "ownerNumber",
											"value": "<integer>,<integer>"
										},
										{
											"key": "retired",
											"value": "false"
										},
										{
											"key": "tagNumber",
											"value": "<integer>,<integer>"
										},
										{
											"key": "entityNumber",
											"value": "<integer>,<integer>"
										},
										{
											"key": "readPermissionLevel",
											"value": "<string>,<string>"
										},
										{
											"key": "writePermissionLevel",
											"value": "<string>,<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": {\n   \"read\": \"<string>\",\n   \"write\": \"<string>\"\n  },\n  \"owner\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"retired\": \"<boolean>\",\n  \"entities\": [\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"tags\": [\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   }\n  ]\n },\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": {\n   \"read\": \"<string>\",\n   \"write\": \"<string>\"\n  },\n  \"owner\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"retired\": \"<boolean>\",\n  \"entities\": [\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"tags\": [\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   },\n   {\n    \"number\": \"<integer>\",\n    \"text\": \"<string>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Create Playbook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"permissions\": {\n        \"read\": \"<string>\",\n        \"write\": \"<string>\"\n    },\n    \"entities\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"description\": \"<string>\",\n    \"tags\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Case}}/playbooks/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"playbooks",
								""
							]
						},
						"description": "Create a new playbook."
					},
					"response": [
						{
							"name": "Returns the newly created playbook.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"permissions\": {\n        \"read\": \"<string>\",\n        \"write\": \"<string>\"\n    },\n    \"entities\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"description\": \"<string>\",\n    \"tags\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "<string>",
									"description": "Entity Tag for the resulting playbook, as described in RFC 7232."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"permissions\": {\n  \"read\": \"<string>\",\n  \"write\": \"<string>\"\n },\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"retired\": \"<boolean>\",\n \"entities\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Clone Playbook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Case}}/playbooks/clone/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"playbooks",
								"clone",
								""
							]
						},
						"description": "Create a clone of a playbook along with its tags, attachments, and procedures."
					},
					"response": [
						{
							"name": "Returns the cloned playbook.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/clone/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										"clone",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "<string>",
									"description": "Entity Tag for the resulting playbook, as described in RFC 7232."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"permissions\": {\n  \"read\": \"<string>\",\n  \"write\": \"<string>\"\n },\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"retired\": \"<boolean>\",\n \"entities\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Import Playbook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "<binary>"
								},
								{
									"key": "importAction",
									"value": "basicImport"
								}
							]
						},
						"url": {
							"raw": "{{BaseUrl_Case}}/playbooks/import/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"playbooks",
								"import",
								""
							]
						},
						"description": "Import a playbook."
					},
					"response": [
						{
							"name": "Returns the imported playbook.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>"
										},
										{
											"key": "importAction",
											"value": "basicImport"
										}
									]
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/playbooks/import/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"playbooks",
										"import",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "<string>",
									"description": "Entity Tag for the resulting playbook, as described in RFC 7232."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<uuid>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"permissions\": {\n  \"read\": \"<string>\",\n  \"write\": \"<string>\"\n },\n \"owner\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"retired\": \"<boolean>\",\n \"entities\": [\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"tags\": [\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  },\n  {\n   \"number\": \"<integer>\",\n   \"text\": \"<string>\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "files",
			"item": [
				{
					"name": "Upload File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "<binary>"
								}
							]
						},
						"url": {
							"raw": "{{BaseUrl_Case}}/files/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"files",
								""
							]
						}
					},
					"response": [
						{
							"name": "Returns the attached file details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>"
										}
									]
								},
								"url": {
									"raw": "{{BaseUrl_Case}}/files/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"files",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<uuid>\",\n \"dateCreated\": \"<dateTime>\",\n \"createdBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"dateUpdated\": \"<dateTime>\",\n \"lastUpdatedBy\": {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n \"status\": \"<string>\",\n \"name\": \"<string>\",\n \"size\": \"<integer>\",\n \"mimeType\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Whitelist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl_Case}}/files/whitelist/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"files",
								"whitelist",
								""
							]
						},
						"description": "Return the file extension whitelist."
					},
					"response": [
						{
							"name": "Returns a list of accepted file extensions.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/files/whitelist/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"files",
										"whitelist",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"<string>\",\n \"<string>\"\n]"
						}
					]
				},
				{
					"name": "Get File Progress",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl_Case}}/files/:id/progress/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"files",
								":id",
								"progress",
								""
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "Unique identifier for the file, as an RFC 4122 formatted string."
								}
							]
						},
						"description": "Return the progress of a file that is uploading or has been uploaded."
					},
					"response": [
						{
							"name": "Returns the progress of the file.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Case}}/files/<uuid>/progress/",
									"host": [
										"{{BaseUrl_Case}}"
									],
									"path": [
										"files",
										"<uuid>",
										"progress",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"bytesUploaded\": \"<integer>\",\n \"fileSizeBytes\": \"<integer>\",\n \"status\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "List Procedures (All Cases)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "offset",
						"value": "<integer>",
						"description": "Number of results to skip when paging."
					},
					{
						"key": "count",
						"value": 25,
						"description": "Maximum number of results to be returned when paging."
					},
					{
						"key": "orderBy",
						"value": "dateUpdated",
						"description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook."
					},
					{
						"key": "direction",
						"value": "asc",
						"description": "Sorts results in ascending or descending order."
					}
				],
				"url": {
					"raw": "{{BaseUrl_Case}}/case-procedures/?name=<string>&status=<string>,<string>&assignee=<integer>,<integer>&dueBefore=<dateTime>&dueAfter=<dateTime>&caseNumber=<integer>,<integer>&caseName=<string>&caseDueBefore=<dateTime>&caseDueAfter=<dateTime>&priority=<integer>,<integer>&statusNumber=<integer>,<integer>&ownerNumber=<integer>,<integer>&collaboratorNumber=<integer>&tagNumber=<integer>,<integer>",
					"host": [
						"{{BaseUrl_Case}}"
					],
					"path": [
						"case-procedures",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "<string>",
							"description": "Filter results that have the specified name."
						},
						{
							"key": "status",
							"value": "<string>,<string>",
							"description": "Filter results that have the specified procedure status."
						},
						{
							"key": "assignee",
							"value": "<integer>,<integer>",
							"description": "Filter results that have a specific procedure assignee, by person numbers. Note that you can specify the literal value `null` to filter for unassigned procedures."
						},
						{
							"key": "dueBefore",
							"value": "<dateTime>",
							"description": "Filter results that have a procedure due date before the specified date. Must be an RFC 3339 formatted string."
						},
						{
							"key": "dueAfter",
							"value": "<dateTime>",
							"description": "Filter results that have a procedure due date after the specified date. Must be an RFC 3339 formatted string."
						},
						{
							"key": "caseNumber",
							"value": "<integer>,<integer>",
							"description": "Filter results by case numbers."
						},
						{
							"key": "caseName",
							"value": "<string>",
							"description": "Filter results that have a case name that contains the specified value."
						},
						{
							"key": "caseDueBefore",
							"value": "<dateTime>",
							"description": "Filter results that have a case due date before the specified date. Must be an RFC 3339 formatted string."
						},
						{
							"key": "caseDueAfter",
							"value": "<dateTime>",
							"description": "Filter results that have a case due date after the specified date. Must be an RFC 3339 formatted string."
						},
						{
							"key": "priority",
							"value": "<integer>,<integer>",
							"description": "Filter results that have a specific case priority."
						},
						{
							"key": "statusNumber",
							"value": "<integer>,<integer>",
							"description": "Filter results that have a specific case status."
						},
						{
							"key": "ownerNumber",
							"value": "<integer>,<integer>",
							"description": "Filter results that have a specific case owner, by person numbers."
						},
						{
							"key": "collaboratorNumber",
							"value": "<integer>",
							"description": "Filter results that have a specific case collaborator, by person number."
						},
						{
							"key": "tagNumber",
							"value": "<integer>,<integer>",
							"description": "Filter results that are tagged, by tag numbers."
						}
					]
				},
				"description": "Return a filtered list of procedure information on all cases. Supports pagination."
			},
			"response": [
				{
					"name": "Returns the filtered procedure information.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Number of results to skip when paging.",
									"type": "text/plain"
								},
								"key": "offset",
								"value": "<integer>"
							},
							{
								"description": {
									"content": "Maximum number of results to be returned when paging.",
									"type": "text/plain"
								},
								"key": "count",
								"value": 25
							},
							{
								"description": {
									"content": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
									"type": "text/plain"
								},
								"key": "orderBy",
								"value": "dateUpdated"
							},
							{
								"description": {
									"content": "Sorts results in ascending or descending order.",
									"type": "text/plain"
								},
								"key": "direction",
								"value": "asc"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/case-procedures/?name=<string>&status=<string>,<string>&assignee=<integer>,<integer>&dueBefore=<dateTime>&dueAfter=<dateTime>&caseNumber=<integer>,<integer>&caseName=<string>&caseDueBefore=<dateTime>&caseDueAfter=<dateTime>&priority=<integer>,<integer>&statusNumber=<integer>,<integer>&ownerNumber=<integer>,<integer>&collaboratorNumber=<integer>&tagNumber=<integer>,<integer>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"case-procedures",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "<string>"
								},
								{
									"key": "status",
									"value": "<string>,<string>"
								},
								{
									"key": "assignee",
									"value": "<integer>,<integer>"
								},
								{
									"key": "dueBefore",
									"value": "<dateTime>"
								},
								{
									"key": "dueAfter",
									"value": "<dateTime>"
								},
								{
									"key": "caseNumber",
									"value": "<integer>,<integer>"
								},
								{
									"key": "caseName",
									"value": "<string>"
								},
								{
									"key": "caseDueBefore",
									"value": "<dateTime>"
								},
								{
									"key": "caseDueAfter",
									"value": "<dateTime>"
								},
								{
									"key": "priority",
									"value": "<integer>,<integer>"
								},
								{
									"key": "statusNumber",
									"value": "<integer>,<integer>"
								},
								{
									"key": "ownerNumber",
									"value": "<integer>,<integer>"
								},
								{
									"key": "collaboratorNumber",
									"value": "<integer>"
								},
								{
									"key": "tagNumber",
									"value": "<integer>,<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"assignee\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"notes\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"casePlaybook\": {\n   \"id\": \"<uuid>\",\n   \"name\": \"<string>\"\n  },\n  \"case\": {\n   \"id\": \"<uuid>\",\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"dueDate\": \"<dateTime>\",\n   \"priority\": \"<integer>\",\n   \"status\": {\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\"\n   },\n   \"owner\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   }\n  }\n },\n {\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"assignee\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"status\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"notes\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"casePlaybook\": {\n   \"id\": \"<uuid>\",\n   \"name\": \"<string>\"\n  },\n  \"case\": {\n   \"id\": \"<uuid>\",\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"dueDate\": \"<dateTime>\",\n   \"priority\": \"<integer>\",\n   \"status\": {\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\"\n   },\n   \"owner\": {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"disabled\": \"<boolean>\"\n   }\n  }\n }\n]"
				}
			]
		},
		{
			"name": "List Logs Indexes (All Cases)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "offset",
						"value": "<integer>",
						"description": "Number of results to skip when paging."
					},
					{
						"key": "count",
						"value": 25,
						"description": "Maximum number of results to be returned when paging."
					},
					{
						"key": "orderBy",
						"value": "dateUpdated",
						"description": "Sorts the returned results by the specified field."
					},
					{
						"key": "direction",
						"value": "asc",
						"description": "Sorts results in ascending or descending order."
					},
					{
						"key": "updatedAfter",
						"value": "<dateTime>",
						"description": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string."
					},
					{
						"key": "updatedBefore",
						"value": "<dateTime>",
						"description": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string."
					},
					{
						"key": "createdAfter",
						"value": "<dateTime>",
						"description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string."
					},
					{
						"key": "createdBefore",
						"value": "<dateTime>",
						"description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string."
					}
				],
				"url": {
					"raw": "{{BaseUrl_Case}}/logs-indexes/?state=<string>,<string>",
					"host": [
						"{{BaseUrl_Case}}"
					],
					"path": [
						"logs-indexes",
						""
					],
					"query": [
						{
							"key": "state",
							"value": "<string>,<string>",
							"description": "Filter results that have the specified logs index state."
						}
					]
				},
				"description": "Return a filtered list of logs indexes for all cases. Can only be accessed by global administrators.  Supports pagination."
			},
			"response": [
				{
					"name": "Returns the filtered logs index information.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Number of results to skip when paging.",
									"type": "text/plain"
								},
								"key": "offset",
								"value": "<integer>"
							},
							{
								"description": {
									"content": "Maximum number of results to be returned when paging.",
									"type": "text/plain"
								},
								"key": "count",
								"value": 25
							},
							{
								"description": {
									"content": "Sorts the returned results by the specified field.",
									"type": "text/plain"
								},
								"key": "orderBy",
								"value": "dateUpdated"
							},
							{
								"description": {
									"content": "Sorts results in ascending or descending order.",
									"type": "text/plain"
								},
								"key": "direction",
								"value": "asc"
							},
							{
								"description": {
									"content": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string.",
									"type": "text/plain"
								},
								"key": "updatedAfter",
								"value": "<dateTime>"
							},
							{
								"description": {
									"content": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string.",
									"type": "text/plain"
								},
								"key": "updatedBefore",
								"value": "<dateTime>"
							},
							{
								"description": {
									"content": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
									"type": "text/plain"
								},
								"key": "createdAfter",
								"value": "<dateTime>"
							},
							{
								"description": {
									"content": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
									"type": "text/plain"
								},
								"key": "createdBefore",
								"value": "<dateTime>"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/logs-indexes/?state=<string>,<string>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"logs-indexes",
								""
							],
							"query": [
								{
									"key": "state",
									"value": "<string>,<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"indexId\": \"<uuid>\",\n  \"state\": \"<string>\",\n  \"message\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateRebuilt\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n },\n {\n  \"indexId\": \"<uuid>\",\n  \"state\": \"<string>\",\n  \"message\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"dateRebuilt\": \"<dateTime>\",\n  \"lastUpdatedBy\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  }\n }\n]"
				}
			]
		},
		{
			"name": "List Global History *",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "offset",
						"value": "<integer>",
						"description": "Number of results to skip when paging."
					},
					{
						"key": "count",
						"value": 25,
						"description": "Maximum number of results to be returned when paging."
					},
					{
						"key": "direction",
						"value": "desc",
						"description": "Sorts results in ascending or descending order."
					},
					{
						"key": "orderBy",
						"value": "actionDate",
						"description": "Sorts the returned results by the specified field."
					},
					{
						"key": "createdAfter",
						"value": "<dateTime>",
						"description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string."
					},
					{
						"key": "createdBefore",
						"value": "<dateTime>",
						"description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string."
					}
				],
				"url": {
					"raw": "{{BaseUrl_Case}}/history/",
					"host": [
						"{{BaseUrl_Case}}"
					],
					"path": [
						"history",
						""
					]
				},
				"description": "Return the global case history. Supports pagination.\n\n  \\* *unstable (may change in a future release)*\n"
			},
			"response": [
				{
					"name": "Returns a list of history for all cases.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Number of results to skip when paging.",
									"type": "text/plain"
								},
								"key": "offset",
								"value": "<integer>"
							},
							{
								"description": {
									"content": "Maximum number of results to be returned when paging.",
									"type": "text/plain"
								},
								"key": "count",
								"value": 25
							},
							{
								"description": {
									"content": "Sorts results in ascending or descending order.",
									"type": "text/plain"
								},
								"key": "direction",
								"value": "desc"
							},
							{
								"description": {
									"content": "Sorts the returned results by the specified field.",
									"type": "text/plain"
								},
								"key": "orderBy",
								"value": "actionDate"
							},
							{
								"description": {
									"content": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
									"type": "text/plain"
								},
								"key": "createdAfter",
								"value": "<dateTime>"
							},
							{
								"description": {
									"content": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
									"type": "text/plain"
								},
								"key": "createdBefore",
								"value": "<dateTime>"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/history/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"history",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"id\": \"<uuid>\",\n  \"date\": \"<dateTime>\",\n  \"actor\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"action\": \"<string>\",\n  \"resources\": [\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"id\": \"<uuid>\",\n  \"date\": \"<dateTime>\",\n  \"actor\": {\n   \"number\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"disabled\": \"<boolean>\"\n  },\n  \"action\": \"<string>\",\n  \"resources\": [\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"retired\": \"<boolean>\",\n    \"properties\": [\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     },\n     {\n      \"name\": \"<string>\",\n      \"from\": \"<object>\",\n      \"to\": \"<object>\"\n     }\n    ]\n   }\n  ]\n }\n]"
				}
			]
		},
		{
			"name": "List Collaborators *",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "offset",
						"value": "<integer>",
						"description": "Number of results to skip when paging."
					},
					{
						"key": "count",
						"value": 25,
						"description": "Maximum number of results to be returned when paging."
					},
					{
						"key": "direction",
						"value": "asc",
						"description": "Sorts results in ascending or descending order."
					}
				],
				"url": {
					"raw": "{{BaseUrl_Case}}/collaborators/?name=<string>",
					"host": [
						"{{BaseUrl_Case}}"
					],
					"path": [
						"collaborators",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "<string>",
							"description": "Filter results that have a person name that contains the specified value."
						}
					]
				},
				"description": "Return a list of active people and notification groups configured in the system. Used for collaborators and notifications. Supports pagination.\n\n  \\* *unsupported endpoint*\n"
			},
			"response": [
				{
					"name": "Returns a list of collaborators.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Number of results to skip when paging.",
									"type": "text/plain"
								},
								"key": "offset",
								"value": "<integer>"
							},
							{
								"description": {
									"content": "Maximum number of results to be returned when paging.",
									"type": "text/plain"
								},
								"key": "count",
								"value": 25
							},
							{
								"description": {
									"content": "Sorts results in ascending or descending order.",
									"type": "text/plain"
								},
								"key": "direction",
								"value": "asc"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/collaborators/?name=<string>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"collaborators",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n },\n {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n }\n]"
				}
			]
		},
		{
			"name": "List Owners *",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "offset",
						"value": "<integer>",
						"description": "Number of results to skip when paging."
					},
					{
						"key": "count",
						"value": 25,
						"description": "Maximum number of results to be returned when paging."
					},
					{
						"key": "direction",
						"value": "asc",
						"description": "Sorts results in ascending or descending order."
					}
				],
				"url": {
					"raw": "{{BaseUrl_Case}}/owners/?name=<string>",
					"host": [
						"{{BaseUrl_Case}}"
					],
					"path": [
						"owners",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "<string>",
							"description": "Filter results that have a person name that contains the specified value."
						}
					]
				},
				"description": "Return a list of people that are owners on cases. Supports pagination.\n\n  \\* *unsupported endpoint*\n"
			},
			"response": [
				{
					"name": "Returns a list of owners.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Number of results to skip when paging.",
									"type": "text/plain"
								},
								"key": "offset",
								"value": "<integer>"
							},
							{
								"description": {
									"content": "Maximum number of results to be returned when paging.",
									"type": "text/plain"
								},
								"key": "count",
								"value": 25
							},
							{
								"description": {
									"content": "Sorts results in ascending or descending order.",
									"type": "text/plain"
								},
								"key": "direction",
								"value": "asc"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Case}}/owners/?name=<string>",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"owners",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n },\n {\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"disabled\": \"<boolean>\"\n }\n]"
				}
			]
		},
		{
			"name": "Get Feature Flags *",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl_Case}}/feature-flags/",
					"host": [
						"{{BaseUrl_Case}}"
					],
					"path": [
						"feature-flags",
						""
					]
				},
				"description": "Retrieve the current feature flags of the Case API.\n\n  \\* *unsupported endpoint*\n"
			},
			"response": [
				{
					"name": "The current feature flags.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl_Case}}/feature-flags/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"feature-flags",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"onDemandLogIndexUnarchivingEnabled\": \"<boolean>\",\n \"caseEntityEnabled\": \"<boolean>\"\n}"
				}
			]
		},
		{
			"name": "Run Log Evidence Maintenance *",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ttl\": \"<integer>\",\n    \"reason\": \"<string>\"\n}"
				},
				"url": {
					"raw": "{{BaseUrl_Case}}/maintenance/log-evidence-ttl/",
					"host": [
						"{{BaseUrl_Case}}"
					],
					"path": [
						"maintenance",
						"log-evidence-ttl",
						""
					]
				},
				"description": "Run maintenance to archive log evidence indexes for cases that are closed, \nwhere the log index update or rebuild date is older than the specified TTL.\n\n  \\* *unsupported endpoint*\n"
			},
			"response": [
				{
					"name": "Returns summary of performed log evidence time to live maintenance.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ttl\": \"<integer>\",\n    \"reason\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Case}}/maintenance/log-evidence-ttl/",
							"host": [
								"{{BaseUrl_Case}}"
							],
							"path": [
								"maintenance",
								"log-evidence-ttl",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"archivedLogIndexCount\": \"<integer>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "031b24d3-af1d-44b3-8421-7ada71f9d3c7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7ec78128-e22b-44ca-812a-1420c82c996b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}