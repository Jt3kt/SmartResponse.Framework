{
	"info": {
		"_postman_id": "9ee506f4-bfe0-421c-b701-4c632be3c0c7",
		"name": "LogRhythm Admin Service API",
		"description": "This is documentation for the LogRhythm Admin Service API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "entities",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get Entity Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/:id/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "The object Id stored in database."
										}
									]
								},
								"description": "Returns Entity details based on the entityId."
							},
							"response": [
								{
									"name": "Returns Entity detail based on the entityId.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/entities/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"entities",
												"<integer>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"parentEntityName\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"shortDesc\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
								},
								{
									"name": "Entity not found in database.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/entities/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"entities",
												"<integer>",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Create Hosts From File",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>"
										}
									]
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/:id/hosts/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										":id",
										"hosts",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "The object Id stored in database."
										}
									]
								},
								"description": "Allows administrators to upload CSV files to create hosts. The CSV file can be configured to apply Hosts to multiple Entities. "
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/entities/<integer>/hosts/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"entities",
												"<integer>",
												"hosts",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "Returns uploaded Hosts.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/entities/<integer>/hosts/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"entities",
												"<integer>",
												"hosts",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"Warning\": \"<object>\",\n \"Error\": \"<object>\",\n \"ImportMessage\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Create Networks From File",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>"
										}
									]
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/:id/networks/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										":id",
										"networks",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "The object Id stored in database."
										}
									]
								},
								"description": "Allows administrators to upload CSV files to create Networks. The CSV file can be configured to create Networks on multiple Entities."
							},
							"response": [
								{
									"name": "Returns uploaded Networks.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/entities/<integer>/networks/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"entities",
												"<integer>",
												"networks",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"Warning\": \"<object>\",\n \"Error\": \"<object>\",\n \"ImportMessage\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>"
												}
											]
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/entities/<integer>/networks/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"entities",
												"<integer>",
												"networks",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List Entities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/entities/?offset=<integer>&count=100&dir=ascending&name=<string>&parentEntityId=<string>&orderBy=name",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"entities",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "parentEntityId",
									"value": "<string>",
									"description": "Filters records by Object parentEntityId."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sorts records by name or Id."
								}
							]
						},
						"description": "Returns all Entities that match the specified criteria."
					},
					"response": [
						{
							"name": "Returns requested Entities.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/?offset=<integer>&count=100&dir=ascending&name=<string>&parentEntityId=<string>&orderBy=name",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "parentEntityId",
											"value": "<string>"
										},
										{
											"key": "orderBy",
											"value": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"parentEntityName\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"abbreviation\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"shortDesc\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"parentEntityName\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"abbreviation\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"shortDesc\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n }\n]"
						}
					]
				},
				{
					"name": "Update Entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"parentEntityName\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"abbreviation\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/entities/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"entities",
								""
							]
						},
						"description": "Updates an Entity based on the Id and other required details. Returns a 404 error if the Id does not exist. Creates an Entity if the Id specified is -1, and then returns the LogRhythm-generated Entity Id. "
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"parentEntityName\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"abbreviation\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Entity with the specified full name already exists. User tried to insert an existing Entity.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"parentEntityName\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"abbreviation\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										""
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns the updated Entity.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"parentEntityName\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"abbreviation\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"parentEntityName\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"shortDesc\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
						},
						{
							"name": "Returns the newly created Entity.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"parentEntityName\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"abbreviation\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"parentEntityName\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"shortDesc\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Create Entities From File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "<binary>"
								}
							]
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/entities/import/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"entities",
								"import",
								""
							]
						},
						"description": "Allows administrators to upload CSV files to create Entities."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>"
										}
									]
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/import/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										"import",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Returns uploaded Entities.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>"
										}
									]
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/entities/import/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"entities",
										"import",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"isSuccessful\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\"\n },\n {\n  \"isSuccessful\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"name\": \"<string>\"\n }\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "hosts",
			"item": [
				{
					"name": "roles",
					"item": [
						{
							"name": "Add Host Role and Person",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/roles/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										"roles",
										""
									]
								},
								"description": "Adds a role to a Host and (optionally) adds specific Person records to that role."
							},
							"response": [
								{
									"name": "Returns acknowledgement of Host Roles or Person added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    }\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/roles/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"roles",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    }\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/roles/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"roles",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						},
						{
							"name": "Delete Host Role or Person",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/roles/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										"roles",
										""
									]
								},
								"description": "Deletes a role and its associated Person records from a Host. Deletes a Person record from a role associated with a Host.   "
							},
							"response": [
								{
									"name": "Returns acknowledgement of Host Roles or Person deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    }\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/roles/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"roles",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"hostRoles\": [\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            },\n            {\n                \"hostRole\": \"<string>\",\n                \"persons\": [\n                    \"<integer>\",\n                    \"<integer>\"\n                ]\n            }\n        ]\n    }\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/roles/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"roles",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "identifiers",
							"item": [
								{
									"name": "Update Host Id",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "Authenticate using a JSON Web Token (JWT)"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    },\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    }\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/:id/identifiers/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												":id",
												"identifiers",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "The object Id stored in database."
												}
											]
										},
										"description": "Updates a Host based on the Id and other required details. Searches existing Hosts by Id. Updates existing Host if the Id exists or adds a new one. Returns Host Id with response 200. "
									},
									"response": [
										{
											"name": "Returns Host Id added or updated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    },\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    }\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/hosts/<integer>/identifiers/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"hosts",
														"<integer>",
														"identifiers",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<object>\""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    },\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    }\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/hosts/<integer>/identifiers/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"hosts",
														"<integer>",
														"identifiers",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<object>\""
										}
									]
								},
								{
									"name": "Remove Host Identifiers",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "Authenticate using a JSON Web Token (JWT)"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    },\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    }\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/:id/identifiers/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												":id",
												"identifiers",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "The object Id stored in database."
												}
											]
										},
										"description": "Searches existing Hosts by Id. If the Id exists, the Host Identifiers are removed."
									},
									"response": [
										{
											"name": "Returns acknowledgement of Host Identifiers removed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    },\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    }\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/hosts/<integer>/identifiers/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"hosts",
														"<integer>",
														"identifiers",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<object>\""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    },\n    {\n        \"hostIdentifiers\": [\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            },\n            {\n                \"type\": \"<string>\",\n                \"value\": \"<string>\",\n                \"dateAssigned\": \"<dateTime>\",\n                \"dateRetired\": \"<dateTime>\"\n            }\n        ]\n    }\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/hosts/<integer>/identifiers/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"hosts",
														"<integer>",
														"identifiers",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<object>\""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Host Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/:id/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "The object Id stored in database."
										}
									]
								},
								"description": "Returns Host details based on the hostId."
							},
							"response": [
								{
									"name": "Returns Host detail based on hostID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"<integer>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"riskLevel\": \"<string>\",\n \"hostZone\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"os\": \"<string>\",\n \"useEventlogCredentials\": \"<boolean>\",\n \"entity\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"id\": \"<integer>\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"threatLevel\": \"<string>\",\n \"threatLevelComments\": \"<string>\",\n \"location\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"osVersion\": \"<string>\",\n \"eventlogUsername\": \"<string>\",\n \"eventlogPassword\": \"<password>\",\n \"osType\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
								},
								{
									"name": "No Host found in the database.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"<integer>",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update Host",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"os\": \"<string>\",\n    \"useEventlogCredentials\": \"<boolean>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"id\": \"<integer>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"threatLevelComments\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"osVersion\": \"<string>\",\n    \"eventlogUsername\": \"<string>\",\n    \"eventlogPassword\": \"<password>\",\n    \"osType\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/:id/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "The object Id stored in database."
										}
									]
								},
								"description": "Updates a Host based on the Id and other required details. Searches existing Hosts by Id. Returns a 404 error if the Id does not exist. Otherwise, updates the Host and returns the Host Id with response 200."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"os\": \"<string>\",\n    \"useEventlogCredentials\": \"<boolean>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"id\": \"<integer>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"threatLevelComments\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"osVersion\": \"<string>\",\n    \"eventlogUsername\": \"<string>\",\n    \"eventlogPassword\": \"<password>\",\n    \"osType\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"<integer>",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "Returns the updated Host details.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"os\": \"<string>\",\n    \"useEventlogCredentials\": \"<boolean>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"id\": \"<integer>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"threatLevelComments\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"osVersion\": \"<string>\",\n    \"eventlogUsername\": \"<string>\",\n    \"eventlogPassword\": \"<password>\",\n    \"osType\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/hosts/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"hosts",
												"<integer>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"riskLevel\": \"<string>\",\n \"hostZone\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"os\": \"<string>\",\n \"useEventlogCredentials\": \"<boolean>\",\n \"entity\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"id\": \"<integer>\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"threatLevel\": \"<string>\",\n \"threatLevelComments\": \"<string>\",\n \"location\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"osVersion\": \"<string>\",\n \"eventlogUsername\": \"<string>\",\n \"eventlogPassword\": \"<password>\",\n \"osType\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List Hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/hosts/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&entity=<string>&recordStatus=All",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"hosts",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sorts records by name or Id."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "entity",
									"value": "<string>",
									"description": "Filters records by Entity name."
								},
								{
									"key": "recordStatus",
									"value": "All",
									"description": "Filters records by object recordStatus."
								}
							]
						},
						"description": "Returns all Hosts that match the specified criteria. "
					},
					"response": [
						{
							"name": "Returns requested Hosts.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&entity=<string>&recordStatus=All",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "entity",
											"value": "<string>"
										},
										{
											"key": "recordStatus",
											"value": "All"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"<string>\",\n  \"riskLevel\": \"<string>\",\n  \"hostZone\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"os\": \"<string>\",\n  \"useEventlogCredentials\": \"<boolean>\",\n  \"entity\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"id\": \"<integer>\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"threatLevel\": \"<string>\",\n  \"threatLevelComments\": \"<string>\",\n  \"location\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"osVersion\": \"<string>\",\n  \"eventlogUsername\": \"<string>\",\n  \"eventlogPassword\": \"<password>\",\n  \"osType\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n },\n {\n  \"name\": \"<string>\",\n  \"riskLevel\": \"<string>\",\n  \"hostZone\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"os\": \"<string>\",\n  \"useEventlogCredentials\": \"<boolean>\",\n  \"entity\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"id\": \"<integer>\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"threatLevel\": \"<string>\",\n  \"threatLevelComments\": \"<string>\",\n  \"location\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"osVersion\": \"<string>\",\n  \"eventlogUsername\": \"<string>\",\n  \"eventlogPassword\": \"<password>\",\n  \"osType\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n }\n]"
						}
					]
				},
				{
					"name": "Create Host Record",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"os\": \"<string>\",\n    \"useEventlogCredentials\": \"<boolean>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"id\": \"<integer>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"threatLevelComments\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"osVersion\": \"<string>\",\n    \"eventlogUsername\": \"<string>\",\n    \"eventlogPassword\": \"<password>\",\n    \"osType\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/hosts/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"hosts",
								""
							]
						},
						"description": "Creates a new Host based on details other than Id. Creates a Host if the Id specified is -1, and then returns the LogRhythm-generated Host Id."
					},
					"response": [
						{
							"name": "Returns the newly created Host.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"os\": \"<string>\",\n    \"useEventlogCredentials\": \"<boolean>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"id\": \"<integer>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"threatLevelComments\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"osVersion\": \"<string>\",\n    \"eventlogUsername\": \"<string>\",\n    \"eventlogPassword\": \"<password>\",\n    \"osType\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"riskLevel\": \"<string>\",\n \"hostZone\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"os\": \"<string>\",\n \"useEventlogCredentials\": \"<boolean>\",\n \"entity\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"id\": \"<integer>\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"threatLevel\": \"<string>\",\n \"threatLevelComments\": \"<string>\",\n \"location\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"osVersion\": \"<string>\",\n \"eventlogUsername\": \"<string>\",\n \"eventlogPassword\": \"<password>\",\n \"osType\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"recordStatusName\": \"<string>\",\n    \"os\": \"<string>\",\n    \"useEventlogCredentials\": \"<boolean>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"id\": \"<integer>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"threatLevelComments\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"osVersion\": \"<string>\",\n    \"eventlogUsername\": \"<string>\",\n    \"eventlogPassword\": \"<password>\",\n    \"osType\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						}
					]
				},
				{
					"name": "Batch Update Hosts",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\",\n        \"os\": \"<string>\",\n        \"osVersion\": \"<string>\",\n        \"eventlogUsername\": \"<string>\",\n        \"eventlogPassword\": \"<password>\"\n    },\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\",\n        \"os\": \"<string>\",\n        \"osVersion\": \"<string>\",\n        \"eventlogUsername\": \"<string>\",\n        \"eventlogPassword\": \"<password>\"\n    }\n]"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/hosts/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"hosts",
								""
							]
						},
						"description": "Updates a Host or multiple Hosts based on the Id and other required fields. Searches existing Hosts by Id. Returns a 404 error if the Id does not exist. Otherwise, updates the Hosts and returns the Host Ids with response 200."
					},
					"response": [
						{
							"name": "Returns acknowledgement of Host fields updated with new values. Provides additional information in response body if errors occurred.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\",\n        \"os\": \"<string>\",\n        \"osVersion\": \"<string>\",\n        \"eventlogUsername\": \"<string>\",\n        \"eventlogPassword\": \"<password>\"\n    },\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\",\n        \"os\": \"<string>\",\n        \"osVersion\": \"<string>\",\n        \"eventlogUsername\": \"<string>\",\n        \"eventlogPassword\": \"<password>\"\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\",\n        \"os\": \"<string>\",\n        \"osVersion\": \"<string>\",\n        \"eventlogUsername\": \"<string>\",\n        \"eventlogPassword\": \"<password>\"\n    },\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\",\n        \"os\": \"<string>\",\n        \"osVersion\": \"<string>\",\n        \"eventlogUsername\": \"<string>\",\n        \"eventlogPassword\": \"<password>\"\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						}
					]
				},
				{
					"name": "Change Status of Host",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"status\": \"<string>\"\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"status\": \"<string>\"\n    }\n]"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/hosts/status/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"hosts",
								"status",
								""
							]
						},
						"description": "Updates the status of a Host or multiple Hosts to retire or activate it."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"status\": \"<string>\"\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"status\": \"<string>\"\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/status/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										"status",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Returns acknowledgement of Host status changed. Provides additional information in response body if errors occurred.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"hostId\": \"<integer>\",\n        \"status\": \"<string>\"\n    },\n    {\n        \"hostId\": \"<integer>\",\n        \"status\": \"<string>\"\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/hosts/status/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"hosts",
										"status",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "networks",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get Network Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/:id/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "The object Id stored in database."
										}
									]
								},
								"description": "Returns Network details based on the networkID."
							},
							"response": [
								{
									"name": "Returns Network detail based on networkID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/networks/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"networks",
												"<integer>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"entity\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"recordStatusName\": \"<string>\",\n \"riskLevel\": \"<string>\",\n \"threatLevel\": \"<string>\",\n \"hostZone\": \"<string>\",\n \"bip\": \"<string>\",\n \"eip\": \"<string>\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"threatLevelComment\": \"<string>\",\n \"location\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"dateUpdated\": \"<dateTime>\"\n}"
								},
								{
									"name": "Network not found in database.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/networks/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"networks",
												"<integer>",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update Network",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/:id/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "The object Id stored in database."
										}
									]
								},
								"description": "Updates a Network based on Id and other required details. Searches system for existing Networks by Id. If the Id does not exist, nothing in the database is updated. Otherwise, updates the Network and returns the same Network Id with response 200."
							},
							"response": [
								{
									"name": "Returns the updated Network details.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/networks/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"networks",
												"<integer>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"entity\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"recordStatusName\": \"<string>\",\n \"riskLevel\": \"<string>\",\n \"threatLevel\": \"<string>\",\n \"hostZone\": \"<string>\",\n \"bip\": \"<string>\",\n \"eip\": \"<string>\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"threatLevelComment\": \"<string>\",\n \"location\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"dateUpdated\": \"<dateTime>\"\n}"
								},
								{
									"name": "The request is bad. For example the wrong location Id, the IP range overlapped with other Networks, or the name is used by other Network in same Entity.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/networks/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"networks",
												"<integer>",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/networks/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"networks",
												"<integer>",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List Networks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/networks/?offset=<integer>&count=100&dir=ascending&name=<string>&recordStatus=All&BIP=<string>&EIP=<string>&Entity=<string>&orderBy=Name",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"networks",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "recordStatus",
									"value": "All",
									"description": "Filters records by object recordStatus."
								},
								{
									"key": "BIP",
									"value": "<string>",
									"description": "The starting IP address to allow records to be filtered on a specified IP address, e.g. BIP 127.0.0.1."
								},
								{
									"key": "EIP",
									"value": "<string>",
									"description": "The ending IP address to allow records to be filtered on a specified IP address, e.g. EIP 127.0.0.1."
								},
								{
									"key": "Entity",
									"value": "<string>",
									"description": "The description name to allow records to be filtered on a specified Entity name."
								},
								{
									"key": "orderBy",
									"value": "Name",
									"description": "Sorts records by Name (Network Name column), BIP, EIP, or Entity name."
								}
							]
						},
						"description": "Returns all networks that match the specified criteria.  "
					},
					"response": [
						{
							"name": "The request is bad. For example, 'FilterInfo - Filter Specified is not a valid json.'",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/?offset=<integer>&count=100&dir=ascending&name=<string>&recordStatus=All&BIP=<string>&EIP=<string>&Entity=<string>&orderBy=Name",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "recordStatus",
											"value": "All"
										},
										{
											"key": "BIP",
											"value": "<string>"
										},
										{
											"key": "EIP",
											"value": "<string>"
										},
										{
											"key": "Entity",
											"value": "<string>"
										},
										{
											"key": "orderBy",
											"value": "Name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns Networks that match criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/?offset=<integer>&count=100&dir=ascending&name=<string>&recordStatus=All&BIP=<string>&EIP=<string>&Entity=<string>&orderBy=Name",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "recordStatus",
											"value": "All"
										},
										{
											"key": "BIP",
											"value": "<string>"
										},
										{
											"key": "EIP",
											"value": "<string>"
										},
										{
											"key": "Entity",
											"value": "<string>"
										},
										{
											"key": "orderBy",
											"value": "Name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"<string>\",\n  \"entity\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"recordStatusName\": \"<string>\",\n  \"riskLevel\": \"<string>\",\n  \"threatLevel\": \"<string>\",\n  \"hostZone\": \"<string>\",\n  \"bip\": \"<string>\",\n  \"eip\": \"<string>\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"threatLevelComment\": \"<string>\",\n  \"location\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\"\n },\n {\n  \"name\": \"<string>\",\n  \"entity\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"recordStatusName\": \"<string>\",\n  \"riskLevel\": \"<string>\",\n  \"threatLevel\": \"<string>\",\n  \"hostZone\": \"<string>\",\n  \"bip\": \"<string>\",\n  \"eip\": \"<string>\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"threatLevelComment\": \"<string>\",\n  \"location\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\"\n }\n]"
						}
					]
				},
				{
					"name": "Create Network",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/networks/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"networks",
								""
							]
						},
						"description": "Creates a new Network on the specified Entity if all validation succeeds. "
					},
					"response": [
						{
							"name": "The request is bad. For example, the location Id is wrong, the IP range overlapped with other Networks, or the name is used by other Network in same Entity.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns the newly created Network.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"entity\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"recordStatusName\": \"<string>\",\n \"riskLevel\": \"<string>\",\n \"threatLevel\": \"<string>\",\n \"hostZone\": \"<string>\",\n \"bip\": \"<string>\",\n \"eip\": \"<string>\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"threatLevelComment\": \"<string>\",\n \"location\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"dateUpdated\": \"<dateTime>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"entity\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"recordStatusName\": \"<string>\",\n    \"riskLevel\": \"<string>\",\n    \"threatLevel\": \"<string>\",\n    \"hostZone\": \"<string>\",\n    \"bip\": \"<string>\",\n    \"eip\": \"<string>\",\n    \"shortDesc\": \"<string>\",\n    \"longDesc\": \"<string>\",\n    \"threatLevelComment\": \"<string>\",\n    \"location\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n    },\n    \"dateUpdated\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						}
					]
				},
				{
					"name": "Batch Update Networks",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"recordStatus\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\"\n    },\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"recordStatus\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\"\n    }\n]"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/networks/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"networks",
								""
							]
						},
						"description": "Updates riskLevel, threatLevel, recordStatus, hostZone, and location on one or multiple networks. The operation is valid for existing networks only. Ignores update request if the value change requested is for a Network that does not exist or to which the user doesn't have permissions."
					},
					"response": [
						{
							"name": "Returns Networks fields updated with new values. Provides additional information in the response body if errors occurred.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"recordStatus\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\"\n    },\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"recordStatus\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\"\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"recordStatus\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\"\n    },\n    {\n        \"id\": \"<integer>\",\n        \"riskLevel\": \"<string>\",\n        \"threatLevel\": \"<string>\",\n        \"recordStatus\": \"<string>\",\n        \"hostZone\": \"<string>\",\n        \"location\": \"<integer>\"\n    }\n]"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/networks/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"networks",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "lists",
			"item": [
				{
					"name": "{guid}",
					"item": [
						{
							"name": "items",
							"item": [
								{
									"name": "Add Items to List",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "Authenticate using a JSON Web Token (JWT)"
											},
											{
												"key": "loadListItems",
												"value": "<boolean>",
												"description": "Returns list items after items are added to or removed from an existing list if set to true. Otherwise, returns a list summary but no items."
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"items\": [\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/lists/:guid/items/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"lists",
												":guid",
												"items",
												""
											],
											"variable": [
												{
													"key": "guid",
													"value": "FDD09F74-32A1-438A-A694-D36E9C4B7E17",
													"description": "The GUID stored in database."
												}
											]
										},
										"description": "Adds more items to an existing List."
									},
									"response": [
										{
											"name": "Returns List with all items.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"description": {
															"content": "Returns list items after items are added to or removed from an existing list if set to true. Otherwise, returns a list summary but no items.",
															"type": "text/plain"
														},
														"key": "loadListItems",
														"value": "<boolean>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"items\": [\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/lists/<string>/items/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"lists",
														"<string>",
														"items",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"<string>\",\n \"listType\": \"<string>\",\n \"autoImportOption\": {\n  \"enabled\": \"<boolean>\",\n  \"usePatterns\": \"<boolean>\",\n  \"replaceExisting\": \"<boolean>\"\n },\n \"readAccess\": \"<string>\",\n \"writeAccess\": \"<string>\",\n \"entityName\": \"<string>\",\n \"restrictedRead\": \"<boolean>\",\n \"needToNotify\": \"<boolean>\",\n \"doesExpire\": \"<boolean>\",\n \"status\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"useContext\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"importFileName\": \"<string>\",\n \"id\": \"<integer>\",\n \"guid\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"revisitDate\": \"<dateTime>\",\n \"entryCount\": \"<integer>\",\n \"timeToLiveSeconds\": \"<integer>\",\n \"owner\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Add Items to List (Testing)",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "Authenticate using a JSON Web Token (JWT)",
												"key": "Authorization",
												"value": ""
											},
											{
												"description": "Returns list items after items are added to or removed from an existing list if set to true. Otherwise, returns a list summary but no items.",
												"key": "loadListItems",
												"value": "false"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"items\": [\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/lists/:guid/items/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"lists",
												":guid",
												"items",
												""
											],
											"variable": [
												{
													"key": "guid",
													"value": "FDD09F74-32A1-438A-A694-D36E9C4B7E17",
													"description": "The GUID stored in database."
												}
											]
										},
										"description": "Adds more items to an existing List."
									},
									"response": [
										{
											"name": "Returns List with all items.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"description": {
															"content": "Returns list items after items are added to or removed from an existing list if set to true. Otherwise, returns a list summary but no items.",
															"type": "text/plain"
														},
														"key": "loadListItems",
														"value": "<boolean>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"items\": [\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/lists/<string>/items/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"lists",
														"<string>",
														"items",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"<string>\",\n \"listType\": \"<string>\",\n \"autoImportOption\": {\n  \"enabled\": \"<boolean>\",\n  \"usePatterns\": \"<boolean>\",\n  \"replaceExisting\": \"<boolean>\"\n },\n \"readAccess\": \"<string>\",\n \"writeAccess\": \"<string>\",\n \"entityName\": \"<string>\",\n \"restrictedRead\": \"<boolean>\",\n \"needToNotify\": \"<boolean>\",\n \"doesExpire\": \"<boolean>\",\n \"status\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"useContext\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"importFileName\": \"<string>\",\n \"id\": \"<integer>\",\n \"guid\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"revisitDate\": \"<dateTime>\",\n \"entryCount\": \"<integer>\",\n \"timeToLiveSeconds\": \"<integer>\",\n \"owner\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Remove Items From List",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "Authenticate using a JSON Web Token (JWT)"
											},
											{
												"key": "loadListItems",
												"value": "<boolean>",
												"description": "Returns list items after items are added to or removed from an existing list if set to true. Otherwise, returns a list summary but no items."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"items\": [\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/lists/:guid/items/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"lists",
												":guid",
												"items",
												""
											],
											"variable": [
												{
													"key": "guid",
													"value": "<string>",
													"description": "The GUID stored in database."
												}
											]
										},
										"description": "Removes items from an existing List."
									},
									"response": [
										{
											"name": "Returns List with all items.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"description": {
															"content": "Returns list items after items are added to or removed from an existing list if set to true. Otherwise, returns a list summary but no items.",
															"type": "text/plain"
														},
														"key": "loadListItems",
														"value": "<boolean>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"items\": [\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"displayValue\": \"<string>\",\n            \"expirationDate\": \"<dateTime>\",\n            \"isExpired\": \"<boolean>\",\n            \"isListItem\": \"<boolean>\",\n            \"isPattern\": \"<boolean>\",\n            \"listItemDataType\": \"<string>\",\n            \"listItemType\": \"<string>\",\n            \"value\": \"<string>\",\n            \"valueAsListReference\": {\n                \"listId\": \"<integer>\",\n                \"guid\": \"<string>\",\n                \"listType\": \"<string>\",\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/lists/<string>/items/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"lists",
														"<string>",
														"items",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"<string>\",\n \"listType\": \"<string>\",\n \"autoImportOption\": {\n  \"enabled\": \"<boolean>\",\n  \"usePatterns\": \"<boolean>\",\n  \"replaceExisting\": \"<boolean>\"\n },\n \"readAccess\": \"<string>\",\n \"writeAccess\": \"<string>\",\n \"entityName\": \"<string>\",\n \"restrictedRead\": \"<boolean>\",\n \"needToNotify\": \"<boolean>\",\n \"doesExpire\": \"<boolean>\",\n \"status\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"useContext\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"importFileName\": \"<string>\",\n \"id\": \"<integer>\",\n \"guid\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"revisitDate\": \"<dateTime>\",\n \"entryCount\": \"<integer>\",\n \"timeToLiveSeconds\": \"<integer>\",\n \"owner\": \"<integer>\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0531b613-c7f7-41f8-9e81-a189569070a8",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5a335ac9-f49f-47fe-9677-b77d1cb186c4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get List Details and Items",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "Authenticate using a JSON Web Token (JWT)"
									},
									{
										"key": "maxItemsThreshold",
										"value": "100",
										"description": "The upper limit for items that can be returned in a single request. "
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lists/:guid/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lists",
										":guid",
										""
									],
									"variable": [
										{
											"key": "guid",
											"value": "D378A76F-1D83-4714-9A7C-FC04F9A2EB13",
											"description": "The GUID stored in database."
										}
									]
								},
								"description": "Returns List details and List items based on List GUID."
							},
							"response": [
								{
									"name": "Returns List details and List items for specified the Id.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"description": {
													"content": "The upper limit for items that can be returned in a single request. ",
													"type": "text/plain"
												},
												"key": "maxItemsThreshold",
												"value": 1000
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/lists/<string>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"lists",
												"<string>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"listType\": \"<string>\",\n \"autoImportOption\": {\n  \"enabled\": \"<boolean>\",\n  \"usePatterns\": \"<boolean>\",\n  \"replaceExisting\": \"<boolean>\"\n },\n \"readAccess\": \"<string>\",\n \"writeAccess\": \"<string>\",\n \"entityName\": \"<string>\",\n \"restrictedRead\": \"<boolean>\",\n \"needToNotify\": \"<boolean>\",\n \"doesExpire\": \"<boolean>\",\n \"status\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"useContext\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"importFileName\": \"<string>\",\n \"id\": \"<integer>\",\n \"guid\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"revisitDate\": \"<dateTime>\",\n \"entryCount\": \"<integer>\",\n \"timeToLiveSeconds\": \"<integer>\",\n \"owner\": \"<integer>\"\n}"
								},
								{
									"name": "List has more items than specified in maxItemsThreshold header.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Authenticate using a JSON Web Token (JWT)",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": ""
											},
											{
												"description": {
													"content": "The upper limit for items that can be returned in a single request. ",
													"type": "text/plain"
												},
												"key": "maxItemsThreshold",
												"value": 1000
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/lists/<string>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"lists",
												"<string>",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get List Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)",
								"disabled": true
							},
							{
								"key": "pageNumber",
								"value": 1,
								"description": "The number of specific pages to view. ",
								"disabled": true
							},
							{
								"key": "pageSize",
								"value": 100,
								"description": "The number of records shown in a page. ",
								"disabled": true
							},
							{
								"key": "listType",
								"value": "None",
								"description": "List types supported in LogRhythm",
								"disabled": true
							},
							{
								"key": "name",
								"value": "IP.Suspicious",
								"description": "The name of the object or regex match."
							},
							{
								"key": "canEdit",
								"value": "true",
								"description": "Specifies if Write Only (true) or Read Only (false) Lists are required for a User."
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/lists/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"lists",
								""
							]
						},
						"description": "Returns List details based on the List type. Returns the User list if the List type value is not specified. Filters on List Name field. "
					},
					"response": [
						{
							"name": "Minimum length for Name filter is three characters.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"description": {
											"content": "The number of specific pages to view. ",
											"type": "text/plain"
										},
										"key": "pageNumber",
										"value": 1
									},
									{
										"description": {
											"content": "The number of records shown in a page. ",
											"type": "text/plain"
										},
										"key": "pageSize",
										"value": 100
									},
									{
										"description": {
											"content": "List types supported in LogRhythm",
											"type": "text/plain"
										},
										"key": "listType",
										"value": "None"
									},
									{
										"description": {
											"content": "The name of the object or regex match.",
											"type": "text/plain"
										},
										"key": "name",
										"value": "<string>"
									},
									{
										"description": {
											"content": "Specifies if Write Only (true) or Read Only (false) Lists are required for a User.",
											"type": "text/plain"
										},
										"key": "canEdit",
										"value": "<boolean>"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lists/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lists",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns basic list information that matches the specified criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"description": {
											"content": "The number of specific pages to view. ",
											"type": "text/plain"
										},
										"key": "pageNumber",
										"value": 1
									},
									{
										"description": {
											"content": "The number of records shown in a page. ",
											"type": "text/plain"
										},
										"key": "pageSize",
										"value": 100
									},
									{
										"description": {
											"content": "List types supported in LogRhythm",
											"type": "text/plain"
										},
										"key": "listType",
										"value": "None"
									},
									{
										"description": {
											"content": "The name of the object or regex match.",
											"type": "text/plain"
										},
										"key": "name",
										"value": "<string>"
									},
									{
										"description": {
											"content": "Specifies if Write Only (true) or Read Only (false) Lists are required for a User.",
											"type": "text/plain"
										},
										"key": "canEdit",
										"value": "<boolean>"
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lists/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lists",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"<string>\",\n  \"listType\": \"<string>\",\n  \"autoImportOption\": {\n   \"enabled\": \"<boolean>\",\n   \"usePatterns\": \"<boolean>\",\n   \"replaceExisting\": \"<boolean>\"\n  },\n  \"readAccess\": \"<string>\",\n  \"writeAccess\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"restrictedRead\": \"<boolean>\",\n  \"needToNotify\": \"<boolean>\",\n  \"doesExpire\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"shortDescription\": \"<string>\",\n  \"longDescription\": \"<string>\",\n  \"useContext\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"importFileName\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"guid\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"revisitDate\": \"<dateTime>\",\n  \"entryCount\": \"<integer>\",\n  \"timeToLiveSeconds\": \"<integer>\",\n  \"owner\": \"<integer>\"\n },\n {\n  \"name\": \"<string>\",\n  \"listType\": \"<string>\",\n  \"autoImportOption\": {\n   \"enabled\": \"<boolean>\",\n   \"usePatterns\": \"<boolean>\",\n   \"replaceExisting\": \"<boolean>\"\n  },\n  \"readAccess\": \"<string>\",\n  \"writeAccess\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"restrictedRead\": \"<boolean>\",\n  \"needToNotify\": \"<boolean>\",\n  \"doesExpire\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"shortDescription\": \"<string>\",\n  \"longDescription\": \"<string>\",\n  \"useContext\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"importFileName\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"guid\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"revisitDate\": \"<dateTime>\",\n  \"entryCount\": \"<integer>\",\n  \"timeToLiveSeconds\": \"<integer>\",\n  \"owner\": \"<integer>\"\n }\n]"
						}
					]
				},
				{
					"name": "Create or Update List Summary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"listType\": \"<string>\",\n    \"autoImportOption\": {\n        \"enabled\": \"<boolean>\",\n        \"usePatterns\": \"<boolean>\",\n        \"replaceExisting\": \"<boolean>\"\n    },\n    \"readAccess\": \"<string>\",\n    \"writeAccess\": \"<string>\",\n    \"entityName\": \"<string>\",\n    \"restrictedRead\": \"<boolean>\",\n    \"needToNotify\": \"<boolean>\",\n    \"doesExpire\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"useContext\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"importFileName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"guid\": \"<string>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"revisitDate\": \"<dateTime>\",\n    \"entryCount\": \"<integer>\",\n    \"timeToLiveSeconds\": \"<integer>\",\n    \"owner\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/lists/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"lists",
								""
							]
						},
						"description": "Updates a List Summary based on the GUID and other required details. Searches the system for existing List Summaries by GUID. Creates a new List Summary if the GUID does not exist. Otherwise, updates the List Summary."
					},
					"response": [
						{
							"name": "Creates new List in the database with no list items.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"listType\": \"<string>\",\n    \"autoImportOption\": {\n        \"enabled\": \"<boolean>\",\n        \"usePatterns\": \"<boolean>\",\n        \"replaceExisting\": \"<boolean>\"\n    },\n    \"readAccess\": \"<string>\",\n    \"writeAccess\": \"<string>\",\n    \"entityName\": \"<string>\",\n    \"restrictedRead\": \"<boolean>\",\n    \"needToNotify\": \"<boolean>\",\n    \"doesExpire\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"useContext\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"importFileName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"guid\": \"<string>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"revisitDate\": \"<dateTime>\",\n    \"entryCount\": \"<integer>\",\n    \"timeToLiveSeconds\": \"<integer>\",\n    \"owner\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/lists/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lists",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"listType\": \"<string>\",\n \"autoImportOption\": {\n  \"enabled\": \"<boolean>\",\n  \"usePatterns\": \"<boolean>\",\n  \"replaceExisting\": \"<boolean>\"\n },\n \"readAccess\": \"<string>\",\n \"writeAccess\": \"<string>\",\n \"entityName\": \"<string>\",\n \"restrictedRead\": \"<boolean>\",\n \"needToNotify\": \"<boolean>\",\n \"doesExpire\": \"<boolean>\",\n \"status\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"useContext\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"importFileName\": \"<string>\",\n \"id\": \"<integer>\",\n \"guid\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"revisitDate\": \"<dateTime>\",\n \"entryCount\": \"<integer>\",\n \"timeToLiveSeconds\": \"<integer>\",\n \"owner\": \"<integer>\"\n}"
						},
						{
							"name": "Updates List summary in database.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"listType\": \"<string>\",\n    \"autoImportOption\": {\n        \"enabled\": \"<boolean>\",\n        \"usePatterns\": \"<boolean>\",\n        \"replaceExisting\": \"<boolean>\"\n    },\n    \"readAccess\": \"<string>\",\n    \"writeAccess\": \"<string>\",\n    \"entityName\": \"<string>\",\n    \"restrictedRead\": \"<boolean>\",\n    \"needToNotify\": \"<boolean>\",\n    \"doesExpire\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"useContext\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"importFileName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"guid\": \"<string>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"revisitDate\": \"<dateTime>\",\n    \"entryCount\": \"<integer>\",\n    \"timeToLiveSeconds\": \"<integer>\",\n    \"owner\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/lists/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lists",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"listType\": \"<string>\",\n \"autoImportOption\": {\n  \"enabled\": \"<boolean>\",\n  \"usePatterns\": \"<boolean>\",\n  \"replaceExisting\": \"<boolean>\"\n },\n \"readAccess\": \"<string>\",\n \"writeAccess\": \"<string>\",\n \"entityName\": \"<string>\",\n \"restrictedRead\": \"<boolean>\",\n \"needToNotify\": \"<boolean>\",\n \"doesExpire\": \"<boolean>\",\n \"status\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"useContext\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"importFileName\": \"<string>\",\n \"id\": \"<integer>\",\n \"guid\": \"<string>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateUpdated\": \"<dateTime>\",\n \"revisitDate\": \"<dateTime>\",\n \"entryCount\": \"<integer>\",\n \"timeToLiveSeconds\": \"<integer>\",\n \"owner\": \"<integer>\"\n}"
						},
						{
							"name": "The time-to-live minimum value is 1200 seconds.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"listType\": \"<string>\",\n    \"autoImportOption\": {\n        \"enabled\": \"<boolean>\",\n        \"usePatterns\": \"<boolean>\",\n        \"replaceExisting\": \"<boolean>\"\n    },\n    \"readAccess\": \"<string>\",\n    \"writeAccess\": \"<string>\",\n    \"entityName\": \"<string>\",\n    \"restrictedRead\": \"<boolean>\",\n    \"needToNotify\": \"<boolean>\",\n    \"doesExpire\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"useContext\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"importFileName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"guid\": \"<string>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"revisitDate\": \"<dateTime>\",\n    \"entryCount\": \"<integer>\",\n    \"timeToLiveSeconds\": \"<integer>\",\n    \"owner\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/lists/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lists",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Public List with this name already exists.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"listType\": \"<string>\",\n    \"autoImportOption\": {\n        \"enabled\": \"<boolean>\",\n        \"usePatterns\": \"<boolean>\",\n        \"replaceExisting\": \"<boolean>\"\n    },\n    \"readAccess\": \"<string>\",\n    \"writeAccess\": \"<string>\",\n    \"entityName\": \"<string>\",\n    \"restrictedRead\": \"<boolean>\",\n    \"needToNotify\": \"<boolean>\",\n    \"doesExpire\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"useContext\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"importFileName\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"guid\": \"<string>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"revisitDate\": \"<dateTime>\",\n    \"entryCount\": \"<integer>\",\n    \"timeToLiveSeconds\": \"<integer>\",\n    \"owner\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/lists/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lists",
										""
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f183b209-f95e-48f7-a1e4-f29278ba9aad",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "84d71728-ed96-413a-972b-0713dfc0b256",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "identities",
			"item": [
				{
					"name": "{user Id}",
					"item": [
						{
							"name": "identifiers",
							"item": [
								{
									"name": "Add Identifier to Identity",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n        \"AccountName\": \"<string>\",\n        \"IAMName\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/identities/:userId/identifiers/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"identities",
												":userId",
												"identifiers",
												""
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "Identity Management User Id"
												}
											]
										},
										"description": "Add an Identifier, such as an email address or login, to an existing Identity."
									},
									"response": [
										{
											"name": "Identity does not exist or is not visible to this User.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n        \"AccountName\": \"<string>\",\n        \"IAMName\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/identities/<integer>/identifiers/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"identities",
														"<integer>",
														"identifiers",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<object>\""
										},
										{
											"name": "Identifier already exists for this Identity and cannot be added again.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n        \"AccountName\": \"<string>\",\n        \"IAMName\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/identities/<integer>/identifiers/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"identities",
														"<integer>",
														"identifiers",
														""
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"<object>\""
										},
										{
											"name": "Returns the updated Identity Identifier.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n        \"AccountName\": \"<string>\",\n        \"IAMName\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/identities/<integer>/identifiers/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"identities",
														"<integer>",
														"identifiers",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"identifierType\": \"<string>\",\n \"value\": \"<string>\",\n \"identifierID\": \"<integer>\",\n \"recordStatus\": \"<string>\",\n \"source\": {\n  \"AccountName\": \"<string>\",\n  \"IAMName\": \"<string>\"\n }\n}"
										}
									]
								},
								{
									"name": "Update Identifier Status",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"recordStatus\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/identities/:userId/identifiers/:identityIdentifierId/status/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"identities",
												":userId",
												"identifiers",
												":identityIdentifierId",
												"status",
												""
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "Identity Management User Id"
												},
												{
													"key": "identityIdentifierId",
													"value": "<integer>",
													"description": "The Id of a specific Identifier owned by a single Identity."
												}
											]
										},
										"description": "Updates the MPE Processing status of an Identity's Identifier to disable or re-enable log enrichment.\n"
									},
									"response": [
										{
											"name": "Returns the updated Identity Identifier.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"recordStatus\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/identities/<integer>/identifiers/<integer>/status/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"identities",
														"<integer>",
														"identifiers",
														"<integer>",
														"status",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"identifierType\": \"<string>\",\n \"value\": \"<string>\",\n \"identifierID\": \"<integer>\",\n \"recordStatus\": \"<string>\",\n \"source\": {\n  \"AccountName\": \"<string>\",\n  \"IAMName\": \"<string>\"\n }\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Identity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/:userId/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										":userId",
										""
									],
									"variable": [
										{
											"key": "userId",
											"value": "<integer>",
											"description": "Identity Management User Id"
										}
									]
								},
								"description": "Returns Identity details based on the Identity Id."
							},
							"response": [
								{
									"name": "Returns the Identity.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Admin}}/identities/<integer>/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"identities",
												"<integer>",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"identityID\": \"<integer>\",\n \"nameFirst\": \"<string>\",\n \"nameMiddle\": \"<string>\",\n \"nameLast\": \"<string>\",\n \"displayIdentifier\": \"<string>\",\n \"company\": \"<string>\",\n \"department\": \"<string>\",\n \"title\": \"<string>\",\n \"manager\": \"<string>\",\n \"addressCity\": \"<string>\",\n \"domainName\": \"<string>\",\n \"entity\": {\n  \"entityId\": \"<integer>\",\n  \"rootEntityId\": \"<integer>\",\n  \"path\": \"<string>\",\n  \"name\": \"<string>\"\n },\n \"dateUpdated\": \"<dateTime>\",\n \"recordStatus\": \"<string>\",\n \"identifiers\": [\n  {\n   \"identifierType\": \"<string>\",\n   \"value\": \"<string>\",\n   \"identifierID\": \"<integer>\",\n   \"recordStatus\": \"<string>\",\n   \"source\": {\n    \"AccountName\": \"<string>\",\n    \"IAMName\": \"<string>\"\n   }\n  },\n  {\n   \"identifierType\": \"<string>\",\n   \"value\": \"<string>\",\n   \"identifierID\": \"<integer>\",\n   \"recordStatus\": \"<string>\",\n   \"source\": {\n    \"AccountName\": \"<string>\",\n    \"IAMName\": \"<string>\"\n   }\n  }\n ],\n \"groups\": [\n  {\n   \"name\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update Identity Status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"recordStatus\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/:userId/status/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										":userId",
										"status",
										""
									],
									"variable": [
										{
											"key": "userId",
											"value": "<integer>",
											"description": "Identity Management User Id"
										}
									]
								},
								"description": "Updates the status of an Identity to retire or activate it."
							},
							"response": [
								{
									"name": "Returns the updated Identity.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"recordStatus\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/identities/<integer>/status/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"identities",
												"<integer>",
												"status",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"identityID\": \"<integer>\",\n \"nameFirst\": \"<string>\",\n \"nameMiddle\": \"<string>\",\n \"nameLast\": \"<string>\",\n \"displayIdentifier\": \"<string>\",\n \"company\": \"<string>\",\n \"department\": \"<string>\",\n \"title\": \"<string>\",\n \"manager\": \"<string>\",\n \"addressCity\": \"<string>\",\n \"domainName\": \"<string>\",\n \"entity\": {\n  \"entityId\": \"<integer>\",\n  \"rootEntityId\": \"<integer>\",\n  \"path\": \"<string>\",\n  \"name\": \"<string>\"\n },\n \"dateUpdated\": \"<dateTime>\",\n \"recordStatus\": \"<string>\",\n \"identifiers\": [\n  {\n   \"identifierType\": \"<string>\",\n   \"value\": \"<string>\",\n   \"identifierID\": \"<integer>\",\n   \"recordStatus\": \"<string>\",\n   \"source\": {\n    \"AccountName\": \"<string>\",\n    \"IAMName\": \"<string>\"\n   }\n  },\n  {\n   \"identifierType\": \"<string>\",\n   \"value\": \"<string>\",\n   \"identifierID\": \"<integer>\",\n   \"recordStatus\": \"<string>\",\n   \"source\": {\n    \"AccountName\": \"<string>\",\n    \"IAMName\": \"<string>\"\n   }\n  }\n ],\n \"groups\": [\n  {\n   \"name\": \"<string>\"\n  },\n  {\n   \"name\": \"<string>\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Get Identity Photo",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/:userId/photo/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										":userId",
										"photo",
										""
									],
									"variable": [
										{
											"key": "userId",
											"value": "<integer>",
											"description": "Identity Management User Id"
										}
									]
								},
								"description": "Returns the JPG thumbnail for a given Identity."
							},
							"response": [
								{
									"name": "Error message indicating user image is unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Admin}}/identities/<integer>/photo/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"identities",
												"<integer>",
												"photo",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns the User's image.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl_Admin}}/identities/<integer>/photo/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"identities",
												"<integer>",
												"photo",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "<string>",
											"description": "Short term caching configuration to allow in-browser caching."
										},
										{
											"key": "ETag",
											"value": "<string>",
											"description": "The SHA256 hash of the JPG thumbnail for in-browser caching performance."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<binary>\""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Identities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl_Admin}}/identities/?offset=<integer>&count=25&name=<string>&displayIdentifier=<string>&entity=<string>&identifier=<string>&recordStatus=Active&updatedBefore=<dateTime>&updatedAfter=<dateTime>&orderBy=displayName&showRetired=<boolean>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identities",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Skips results, allowing the client to request paged result sets."
								},
								{
									"key": "count",
									"value": "25",
									"description": "Limits the size of the result set."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters Identity Display Names. Requires a three character minimum."
								},
								{
									"key": "displayIdentifier",
									"value": "<string>",
									"description": "Filters Identity Display Ids. Requires a three character minimum."
								},
								{
									"key": "entity",
									"value": "<string>",
									"description": "Filters Identity Entities. Requires a three character minimum."
								},
								{
									"key": "identifier",
									"value": "<string>",
									"description": "Filters Identity Ids. Requires a three character minimum."
								},
								{
									"key": "recordStatus",
									"value": "Active",
									"description": "\\* Private. For LogRhythm internal use only. *\n"
								},
								{
									"key": "updatedBefore",
									"value": "<dateTime>",
									"description": "\\* Private. For LogRhythm internal use only. *\n"
								},
								{
									"key": "updatedAfter",
									"value": "<dateTime>",
									"description": "\\* Private. For LogRhythm internal use only. *\n"
								},
								{
									"key": "orderBy",
									"value": "displayName",
									"description": "Sorts record by displayName, recordStatus, Entity, or Displayidentifier."
								},
								{
									"key": "showRetired",
									"value": "<boolean>",
									"description": "Filters records by retired status. Defaults to returning only active Identities."
								}
							]
						},
						"description": "Returns Identities based on DisplayName, Login, and Domain fields."
					},
					"response": [
						{
							"name": "Returns the complete list of Identities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/?offset=<integer>&count=25&name=<string>&displayIdentifier=<string>&entity=<string>&identifier=<string>&recordStatus=Active&updatedBefore=<dateTime>&updatedAfter=<dateTime>&orderBy=displayName&showRetired=<boolean>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "25"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "displayIdentifier",
											"value": "<string>"
										},
										{
											"key": "entity",
											"value": "<string>"
										},
										{
											"key": "identifier",
											"value": "<string>"
										},
										{
											"key": "recordStatus",
											"value": "Active"
										},
										{
											"key": "updatedBefore",
											"value": "<dateTime>"
										},
										{
											"key": "updatedAfter",
											"value": "<dateTime>"
										},
										{
											"key": "orderBy",
											"value": "displayName"
										},
										{
											"key": "showRetired",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Offset",
									"value": "<integer>",
									"description": "The number of Identities skipped. For example, if you're viewing page 2, this tells you how many Identities you've skipped."
								},
								{
									"key": "X-Count",
									"value": "<integer>",
									"description": "The number of Identities returned in current page."
								},
								{
									"key": "X-Total-Count",
									"value": "<integer>",
									"description": "The number of Identities that matched the filter criteria."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"identityID\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"displayIdentifier\": \"<string>\",\n  \"company\": \"<string>\",\n  \"department\": \"<string>\",\n  \"title\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"addressCity\": \"<string>\",\n  \"domainName\": \"<string>\",\n  \"entity\": {\n   \"entityId\": \"<integer>\",\n   \"rootEntityId\": \"<integer>\",\n   \"path\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"recordStatus\": \"<string>\",\n  \"identifiers\": [\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   },\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   }\n  ],\n  \"groups\": [\n   {\n    \"name\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\"\n   }\n  ]\n },\n {\n  \"identityID\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"displayIdentifier\": \"<string>\",\n  \"company\": \"<string>\",\n  \"department\": \"<string>\",\n  \"title\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"addressCity\": \"<string>\",\n  \"domainName\": \"<string>\",\n  \"entity\": {\n   \"entityId\": \"<integer>\",\n   \"rootEntityId\": \"<integer>\",\n   \"path\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"recordStatus\": \"<string>\",\n  \"identifiers\": [\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   },\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   }\n  ],\n  \"groups\": [\n   {\n    \"name\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Get Identity Display Names *",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl_Admin}}/identities/display-names/?dateUpdated=<dateTime>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identities",
								"display-names",
								""
							],
							"query": [
								{
									"key": "dateUpdated",
									"value": "<dateTime>"
								}
							]
						},
						"description": "Returns a smaller representation of Identities that only include the Display Name.\n\n  \\* Private. For LogRhythm internal use only. Used by the ARM, Message Engine, and Web Indexer. *\n"
					},
					"response": [
						{
							"name": "Returns the complete list of Identities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/display-names/?dateUpdated=<dateTime>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										"display-names",
										""
									],
									"query": [
										{
											"key": "dateUpdated",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"identityID\": \"<integer>\",\n  \"entityID\": \"<integer>\",\n  \"recordStatus\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"displayName\": \"<string>\"\n },\n {\n  \"identityID\": \"<integer>\",\n  \"entityID\": \"<integer>\",\n  \"recordStatus\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"displayName\": \"<string>\"\n }\n]"
						},
						{
							"name": "Handles error condition when fetching Display Names.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/display-names/?dateUpdated=<dateTime>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										"display-names",
										""
									],
									"query": [
										{
											"key": "dateUpdated",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Identity Identifiers *",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl_Admin}}/identities/identifiers/?rootEntityID=<integer>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identities",
								"identifiers",
								""
							],
							"query": [
								{
									"key": "rootEntityID",
									"value": "<integer>",
									"description": "A non-zero entityID of a root Entity."
								}
							]
						},
						"description": "Returns a smaller representation of Identities for the Message Processing Engine (MPE),\nwhich is only interested in the Identifiers of each Identity.\n\n  \\* Private. For LogRhythm internal use only. Used by the MPE. *\n"
					},
					"response": [
						{
							"name": "Returns the Identifiers and their parent Identities for a given rootEntityId.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/identifiers/?rootEntityID=<integer>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										"identifiers",
										""
									],
									"query": [
										{
											"key": "rootEntityID",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"identityID\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"title\": \"<string>\",\n  \"department\": \"<string>\",\n  \"company\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"identifiers\": [\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   },\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   }\n  ]\n },\n {\n  \"identityID\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"title\": \"<string>\",\n  \"department\": \"<string>\",\n  \"company\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"identifiers\": [\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   },\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Update or Create Bulk Identities",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"friendlyName\": \"<string>\",\n    \"accounts\": [\n        {\n            \"vendorUniqueKey\": \"<string>\",\n            \"thumbnailPhoto\": \"<byte>\",\n            \"hasOwnerIdentity\": \"<boolean>\",\n            \"hasSameRootEntityAsTarget\": \"<boolean>\",\n            \"isPrimary\": \"<boolean>\",\n            \"accountType\": \"<string>\",\n            \"login\": \"<string>\",\n            \"nameFirst\": \"<string>\",\n            \"nameMiddle\": \"<string>\",\n            \"nameLast\": \"<string>\",\n            \"displayIdentifier\": \"<string>\",\n            \"company\": \"<string>\",\n            \"department\": \"<string>\",\n            \"title\": \"<string>\",\n            \"manager\": \"<string>\",\n            \"addressCity\": \"<string>\",\n            \"domainName\": \"<string>\",\n            \"identifiers\": [\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                },\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"vendorUniqueKey\": \"<string>\",\n            \"thumbnailPhoto\": \"<byte>\",\n            \"hasOwnerIdentity\": \"<boolean>\",\n            \"hasSameRootEntityAsTarget\": \"<boolean>\",\n            \"isPrimary\": \"<boolean>\",\n            \"accountType\": \"<string>\",\n            \"login\": \"<string>\",\n            \"nameFirst\": \"<string>\",\n            \"nameMiddle\": \"<string>\",\n            \"nameLast\": \"<string>\",\n            \"displayIdentifier\": \"<string>\",\n            \"company\": \"<string>\",\n            \"department\": \"<string>\",\n            \"title\": \"<string>\",\n            \"manager\": \"<string>\",\n            \"addressCity\": \"<string>\",\n            \"domainName\": \"<string>\",\n            \"identifiers\": [\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                },\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/identities/bulk/?entityID=<integer>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identities",
								"bulk",
								""
							],
							"query": [
								{
									"key": "entityID",
									"value": "<integer>",
									"description": "A non-zero Entity ID where Identities should be created."
								}
							]
						},
						"description": "Updates or creates Identities for the LogRhythm TrueIdentity SyncClient to synchronize Active Directory accounts. Searches the system for existing Identities. Creates a new Identity if does not currently exist. Otherwise, updates the Identity.\n"
					},
					"response": [
						{
							"name": "Returns the number of Identity and Account objects after bulk creation.\n\n  \\* Unstable, may change in a future release. *\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"friendlyName\": \"<string>\",\n    \"accounts\": [\n        {\n            \"vendorUniqueKey\": \"<string>\",\n            \"thumbnailPhoto\": \"<byte>\",\n            \"hasOwnerIdentity\": \"<boolean>\",\n            \"hasSameRootEntityAsTarget\": \"<boolean>\",\n            \"isPrimary\": \"<boolean>\",\n            \"accountType\": \"<string>\",\n            \"login\": \"<string>\",\n            \"nameFirst\": \"<string>\",\n            \"nameMiddle\": \"<string>\",\n            \"nameLast\": \"<string>\",\n            \"displayIdentifier\": \"<string>\",\n            \"company\": \"<string>\",\n            \"department\": \"<string>\",\n            \"title\": \"<string>\",\n            \"manager\": \"<string>\",\n            \"addressCity\": \"<string>\",\n            \"domainName\": \"<string>\",\n            \"identifiers\": [\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                },\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                }\n            ]\n        },\n        {\n            \"vendorUniqueKey\": \"<string>\",\n            \"thumbnailPhoto\": \"<byte>\",\n            \"hasOwnerIdentity\": \"<boolean>\",\n            \"hasSameRootEntityAsTarget\": \"<boolean>\",\n            \"isPrimary\": \"<boolean>\",\n            \"accountType\": \"<string>\",\n            \"login\": \"<string>\",\n            \"nameFirst\": \"<string>\",\n            \"nameMiddle\": \"<string>\",\n            \"nameLast\": \"<string>\",\n            \"displayIdentifier\": \"<string>\",\n            \"company\": \"<string>\",\n            \"department\": \"<string>\",\n            \"title\": \"<string>\",\n            \"manager\": \"<string>\",\n            \"addressCity\": \"<string>\",\n            \"domainName\": \"<string>\",\n            \"identifiers\": [\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                },\n                {\n                    \"identifierType\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"identifierID\": \"<integer>\",\n                    \"recordStatus\": \"<string>\",\n                    \"source\": {\n                        \"AccountName\": \"<string>\",\n                        \"IAMName\": \"<string>\"\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/bulk/?entityID=<integer>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										"bulk",
										""
									],
									"query": [
										{
											"key": "entityID",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"vendorUniqueKey\": \"<string>\",\n  \"identityID\": \"<integer>\",\n  \"identifierSourceAccountID\": \"<integer>\"\n },\n {\n  \"vendorUniqueKey\": \"<string>\",\n  \"identityID\": \"<integer>\",\n  \"identifierSourceAccountID\": \"<integer>\"\n }\n]"
						}
					]
				},
				{
					"name": "Search Identities *",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/identities/query/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identities",
								"query",
								""
							]
						},
						"description": "Searches Identity objects that contain a specified login.\n\n  \\* Private. For LogRhythm internal use only. Used by Cloud AI. *\n"
					},
					"response": [
						{
							"name": "Returns the Identity structures.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/query/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										"query",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"identityID\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"displayIdentifier\": \"<string>\",\n  \"company\": \"<string>\",\n  \"department\": \"<string>\",\n  \"title\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"addressCity\": \"<string>\",\n  \"domainName\": \"<string>\",\n  \"entity\": {\n   \"entityId\": \"<integer>\",\n   \"rootEntityId\": \"<integer>\",\n   \"path\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"recordStatus\": \"<string>\",\n  \"identifiers\": [\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   },\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   }\n  ],\n  \"groups\": [\n   {\n    \"name\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\"\n   }\n  ]\n },\n {\n  \"identityID\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"displayIdentifier\": \"<string>\",\n  \"company\": \"<string>\",\n  \"department\": \"<string>\",\n  \"title\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"addressCity\": \"<string>\",\n  \"domainName\": \"<string>\",\n  \"entity\": {\n   \"entityId\": \"<integer>\",\n   \"rootEntityId\": \"<integer>\",\n   \"path\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\",\n  \"recordStatus\": \"<string>\",\n  \"identifiers\": [\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   },\n   {\n    \"identifierType\": \"<string>\",\n    \"value\": \"<string>\",\n    \"identifierID\": \"<integer>\",\n    \"recordStatus\": \"<string>\",\n    \"source\": {\n     \"AccountName\": \"<string>\",\n     \"IAMName\": \"<string>\"\n    }\n   }\n  ],\n  \"groups\": [\n   {\n    \"name\": \"<string>\"\n   },\n   {\n    \"name\": \"<string>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Search Identity Summaries *",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"logins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/identities/summaries/query/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identities",
								"summaries",
								"query",
								""
							]
						},
						"description": "Searches Identity objects that contain a specified login.\n\n  \\* Private. For LogRhythm internal use only. Used by Cloud AI. *\n"
					},
					"response": [
						{
							"name": "Returns the Identity structures.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"logins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/identities/summaries/query/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"identities",
										"summaries",
										"query",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"login1\": \"<string>\",\n  \"title\": \"<string>\",\n  \"addressCity\": \"<string>\",\n  \"department\": \"<string>\",\n  \"company\": \"<string>\",\n  \"manager\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"nameFirst\": \"<string>\",\n  \"nameMiddle\": \"<string>\",\n  \"nameLast\": \"<string>\",\n  \"login1\": \"<string>\",\n  \"title\": \"<string>\",\n  \"addressCity\": \"<string>\",\n  \"department\": \"<string>\",\n  \"company\": \"<string>\",\n  \"manager\": \"<string>\"\n }\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "messagesourcetypes",
			"item": [
				{
					"name": "List Message Source Types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/messagesourcetypes/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&messageSourceFormat=<integer>&recordStatus=All",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"messagesourcetypes",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sorts records by name or Id."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "messageSourceFormat",
									"value": "<integer>",
									"description": "Filters records by object messageSourceFormat."
								},
								{
									"key": "recordStatus",
									"value": "All",
									"description": "Filters records by object recordStatus."
								}
							]
						},
						"description": "Returns all Log Message Source types that match the specified criteria. Log Message Source types are populated in the system via Knowledge Base import."
					},
					"response": [
						{
							"name": "Returns Log Message Source types that match specified criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/messagesourcetypes/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&messageSourceFormat=<integer>&recordStatus=All",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"messagesourcetypes",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "messageSourceFormat",
											"value": "<integer>"
										},
										{
											"key": "recordStatus",
											"value": "All"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"abbreviation\": \"<string>\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"parentMessageSourceTypeId\": \"<integer>\",\n  \"isMST\": \"<string>\",\n  \"messageSourceFormat\": \"<string>\",\n  \"status\": \"<string>\",\n  \"hostWizDefault\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"abbreviation\": \"<string>\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"parentMessageSourceTypeId\": \"<integer>\",\n  \"isMST\": \"<string>\",\n  \"messageSourceFormat\": \"<string>\",\n  \"status\": \"<string>\",\n  \"hostWizDefault\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get Message Source Type Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/messagesourcetypes/:id/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"messagesourcetypes",
								":id",
								""
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "The object Id stored in database."
								}
							]
						},
						"description": "Provides Log Message Source type detail based on Id."
					},
					"response": [
						{
							"name": "Returns Log Message Source type detail based on Id.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/messagesourcetypes/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"messagesourcetypes",
										"<integer>",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"parentMessageSourceTypeId\": \"<integer>\",\n \"isMST\": \"<string>\",\n \"messageSourceFormat\": \"<string>\",\n \"status\": \"<string>\",\n \"hostWizDefault\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
						},
						{
							"name": "Log Message Source type not found in the database.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/messagesourcetypes/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"messagesourcetypes",
										"<integer>",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "mpepolicies",
			"item": [
				{
					"name": "List MPE Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/mpepolicies/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&messageSourceTypeId=<integer>&allowAutoSort=<boolean>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"mpepolicies",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sorts records by name or Id."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "messageSourceTypeId",
									"value": "<integer>",
									"description": "Filters records by object messageSourceTypeId."
								},
								{
									"key": "allowAutoSort",
									"value": "<boolean>",
									"description": "Filters records by object allowAutoSort value."
								}
							]
						},
						"description": "Returns all MPE Policies that match the specified criteria. MPE policies are populated in the system via Knowledge Base import and can also be created by administrators."
					},
					"response": [
						{
							"name": "No MPE Policies found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/mpepolicies/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&messageSourceTypeId=<integer>&allowAutoSort=<boolean>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"mpepolicies",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "messageSourceTypeId",
											"value": "<integer>"
										},
										{
											"key": "allowAutoSort",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns available MPE Policies.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/mpepolicies/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&messageSourceTypeId=<integer>&allowAutoSort=<boolean>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"mpepolicies",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "messageSourceTypeId",
											"value": "<integer>"
										},
										{
											"key": "allowAutoSort",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"messageSourceTypeID\": \"<integer>\",\n  \"allowAutoSort\": \"<boolean>\",\n  \"ruleTimeout\": \"<integer>\",\n  \"messageSourceTypeName\": \"<string>\",\n  \"recordType\": \"System\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"updatedBy\": \"<integer>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"messageSourceTypeID\": \"<integer>\",\n  \"allowAutoSort\": \"<boolean>\",\n  \"ruleTimeout\": \"<integer>\",\n  \"messageSourceTypeName\": \"<string>\",\n  \"recordType\": \"System\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"updatedBy\": \"<integer>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get MPE Policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/mpepolicies/:id/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"mpepolicies",
								":id",
								""
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "The object Id stored in database."
								}
							]
						},
						"description": "Returns MPE policy details based on Id."
					},
					"response": [
						{
							"name": "Returns the  MPE policy based on Id.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/mpepolicies/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"mpepolicies",
										"<integer>",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"messageSourceTypeID\": \"<integer>\",\n \"allowAutoSort\": \"<boolean>\",\n \"ruleTimeout\": \"<integer>\",\n \"messageSourceTypeName\": \"<string>\",\n \"recordType\": \"System\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"updatedBy\": \"<integer>\"\n}"
						},
						{
							"name": "No MPE Policy found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/mpepolicies/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"mpepolicies",
										"<integer>",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "messagesourcedateformat",
			"item": [
				{
					"name": "List Date Formats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/messagesourcedateformat/?offset=<integer>&count=100&dir=ascending&name=<string>&recordStatusName={}&orderBy=Name",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"messagesourcedateformat",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "recordStatusName",
									"value": "{}",
									"description": "Filters columns by recordStatusName or Active."
								},
								{
									"key": "orderBy",
									"value": "Name",
									"description": "Sorts records by Name, which is the Log Message Source type name.    "
								}
							]
						},
						"description": "Returns all Log Message Source date formats that match the specified criteria.  Message source date formats are populated in the system via KB import.  "
					},
					"response": [
						{
							"name": "Returns Log Message Source date formats that match specified criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/messagesourcedateformat/?offset=<integer>&count=100&dir=ascending&name=<string>&recordStatusName={}&orderBy=Name",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"messagesourcedateformat",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "recordStatusName",
											"value": "{}"
										},
										{
											"key": "orderBy",
											"value": "Name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"regex\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"regex\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get Message Source Date Format",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/messagesourcedateformat/:id/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"messagesourcedateformat",
								":id",
								""
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "The object Id stored in database."
								}
							]
						},
						"description": "Returns Log Message Source date format details based on Id."
					},
					"response": [
						{
							"name": "Returns the  Log Message Source date format based on Id.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/messagesourcedateformat/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"messagesourcedateformat",
										"<integer>",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"regex\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\"\n}"
						},
						{
							"name": "No Log Message Source date format found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/messagesourcedateformat/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"messagesourcedateformat",
										"<integer>",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "lsvtemplates",
			"item": [
				{
					"name": "List Log Source Virtualization Templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/lsvtemplates/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&desc=<string>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"lsvtemplates",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sorts records by name or description."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "desc",
									"value": "<string>",
									"description": "Filters records by object description."
								}
							]
						},
						"description": "Returns all Log Source Virtualization templates that match the specified criteria. Includes basic details of template and associated items.  "
					},
					"response": [
						{
							"name": "Returns Log Source Virtualization templates that match specified criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lsvtemplates/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&desc=<string>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lsvtemplates",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "desc",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Offset",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization templates skipped."
								},
								{
									"key": "X-Count",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization templates requested."
								},
								{
									"key": "X-Results-Returned",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization templates returned."
								},
								{
									"key": "X-Total-Count",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization templates in the system that match specified criteria."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get Log Source Virtualization Template Detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/lsvtemplates/:id/lsvtemplateitems/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&regex=<string>&messageSourceTypeId=<integer>&mpePolicy=<integer>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"lsvtemplates",
								":id",
								"lsvtemplateitems",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sort records by name, regex, or sortOrder."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "regex",
									"value": "<string>",
									"description": "Filters records by object regex."
								},
								{
									"key": "messageSourceTypeId",
									"value": "<integer>",
									"description": "Filters records by object messageSourceTypeId."
								},
								{
									"key": "mpePolicy",
									"value": "<integer>",
									"description": "Filters records by object mpePolicy."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "The object Id stored in database."
								}
							]
						},
						"description": "Returns Log Source Virtualization template details by Id. "
					},
					"response": [
						{
							"name": "Returns Log Source Virtualization templates that match specified criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lsvtemplates/<integer>/lsvtemplateitems/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&regex=<string>&messageSourceTypeId=<integer>&mpePolicy=<integer>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lsvtemplates",
										"<integer>",
										"lsvtemplateitems",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "regex",
											"value": "<string>"
										},
										{
											"key": "messageSourceTypeId",
											"value": "<integer>"
										},
										{
											"key": "mpePolicy",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Offset",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items skipped."
								},
								{
									"key": "X-Count",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items requested."
								},
								{
									"key": "X-Results-Returned",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items returned."
								},
								{
									"key": "X-Total-Count",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items in the system that match specified criteria."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"sortOrder\": \"<integer>\",\n  \"item\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"regex\": \"<string>\",\n   \"logsourceType\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"mpePolicy\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"dateUpdated\": \"<dateTime>\"\n  }\n },\n {\n  \"id\": \"<integer>\",\n  \"sortOrder\": \"<integer>\",\n  \"item\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"regex\": \"<string>\",\n   \"logsourceType\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"mpePolicy\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n   },\n   \"dateUpdated\": \"<dateTime>\"\n  }\n }\n]"
						},
						{
							"name": "No Log Source Virtualization template found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lsvtemplates/<integer>/lsvtemplateitems/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&regex=<string>&messageSourceTypeId=<integer>&mpePolicy=<integer>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lsvtemplates",
										"<integer>",
										"lsvtemplateitems",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "regex",
											"value": "<string>"
										},
										{
											"key": "messageSourceTypeId",
											"value": "<integer>"
										},
										{
											"key": "mpePolicy",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "lsvtemplateitems",
			"item": [
				{
					"name": "Get Log Source Virtualization Template Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/lsvtemplateitems/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&regex=<string>&messageSourceTypeId=<integer>&mpePolicy=<integer>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"lsvtemplateitems",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sort records by name, regex, or sortOrder."
								},
								{
									"key": "dir",
									"value": "ascending",
									"description": "Sorts records by ascending or descending."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "regex",
									"value": "<string>",
									"description": "Filters records by object regex."
								},
								{
									"key": "messageSourceTypeId",
									"value": "<integer>",
									"description": "Filters records by object messageSourceTypeId."
								},
								{
									"key": "mpePolicy",
									"value": "<integer>",
									"description": "Filters records by object mpePolicy."
								}
							]
						},
						"description": "Returns all Log Source Virtualization template items available in the system. Includes basic details of template items and regular expressions used."
					},
					"response": [
						{
							"name": "Returns Log Source Virtualization template items that match specified criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lsvtemplateitems/?offset=<integer>&count=100&orderBy=name&dir=ascending&name=<string>&regex=<string>&messageSourceTypeId=<integer>&mpePolicy=<integer>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lsvtemplateitems",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "dir",
											"value": "ascending"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "regex",
											"value": "<string>"
										},
										{
											"key": "messageSourceTypeId",
											"value": "<integer>"
										},
										{
											"key": "mpePolicy",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Offset",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items skipped."
								},
								{
									"key": "X-Count",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items requested."
								},
								{
									"key": "X-Results-Returned",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items returned."
								},
								{
									"key": "X-Total-Count",
									"value": "<integer>",
									"description": "The number of Log Source Virtualization template items in the system that match specified criteria."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"regex\": \"<string>\",\n  \"logsourceType\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"mpePolicy\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"regex\": \"<string>\",\n  \"logsourceType\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"mpePolicy\": {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  \"dateUpdated\": \"<dateTime>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get Log Source Virtualization Template Detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/lsvtemplateitems/:id/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"lsvtemplateitems",
								":id",
								""
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "The object Id stored in database."
								}
							]
						},
						"description": "Returns details of specific Log Source Virtualization template items by its Id."
					},
					"response": [
						{
							"name": "No Log Source Virtualization Template found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lsvtemplateitems/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lsvtemplateitems",
										"<integer>",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns Log Source Virtualization template item that matches specified criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/lsvtemplateitems/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"lsvtemplateitems",
										"<integer>",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"regex\": \"<string>\",\n \"logsourceType\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"mpePolicy\": {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n },\n \"dateUpdated\": \"<dateTime>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "persons",
			"item": [
				{
					"name": "List Person Records",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/persons/?offset=<integer>&count=100&direction=asc&orderBy=firstname&entityIds=<integer>,<integer>&name=<string>&hasUserAccount=true,false&personStatus=retired&userStatus=active",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"persons",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Sort records by ascending or descending."
								},
								{
									"key": "orderBy",
									"value": "firstname",
									"description": "Sort records by Person name, Id, or login."
								},
								{
									"key": "entityIds",
									"value": "<integer>,<integer>",
									"description": "Filters records by Person or User record entityId."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "hasUserAccount",
									"value": "true,false",
									"description": "Filters records by specific User account."
								},
								{
									"key": "personStatus",
									"value": "retired",
									"description": "Filters Person records by status."
								},
								{
									"key": "userStatus",
									"value": "active",
									"description": "Filters User records by status."
								}
							]
						},
						"description": "Returns Person records based on the permissions of the currently logged in User and the specified criteria."
					},
					"response": [
						{
							"name": "Persons not found due to permission or Persons don't exist in system.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/persons/?offset=<integer>&count=100&direction=asc&orderBy=firstname&entityIds=<integer>,<integer>&name=<string>&hasUserAccount=true,false&personStatus=retired&userStatus=active",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"persons",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "orderBy",
											"value": "firstname"
										},
										{
											"key": "entityIds",
											"value": "<integer>,<integer>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "hasUserAccount",
											"value": "true,false"
										},
										{
											"key": "personStatus",
											"value": "retired"
										},
										{
											"key": "userStatus",
											"value": "active"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns a list of Persons based on the permissions of the currently logged in User.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/persons/?offset=<integer>&count=100&direction=asc&orderBy=firstname&entityIds=<integer>,<integer>&name=<string>&hasUserAccount=true,false&personStatus=retired&userStatus=active",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"persons",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "orderBy",
											"value": "firstname"
										},
										{
											"key": "entityIds",
											"value": "<integer>,<integer>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "hasUserAccount",
											"value": "true,false"
										},
										{
											"key": "personStatus",
											"value": "retired"
										},
										{
											"key": "userStatus",
											"value": "active"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"middleName\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"abbreviation\": \"<string>\",\n  \"personType\": \"Person\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"adGroup\": \"<string>\",\n  \"isAPIPerson\": \"<boolean>\",\n  \"adDomain\": \"<string>\",\n  \"userPrincipalName\": \"<string>\"\n },\n {\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"middleName\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"abbreviation\": \"<string>\",\n  \"personType\": \"Person\",\n  \"shortDesc\": \"<string>\",\n  \"longDesc\": \"<string>\",\n  \"recordStatusName\": \"<string>\",\n  \"dateUpdated\": \"<dateTime>\",\n  \"adGroup\": \"<string>\",\n  \"isAPIPerson\": \"<boolean>\",\n  \"adDomain\": \"<string>\",\n  \"userPrincipalName\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get Person Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/persons/:id/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"persons",
								":id",
								""
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "The object Id stored in database."
								}
							]
						},
						"description": "Returns current Person details based on person Id. Includes the Person and the User associated with the Person."
					},
					"response": [
						{
							"name": "Returns current Person details and User account associated with Person based on Person Id.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/persons/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"persons",
										"<integer>",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"id\": \"<integer>\",\n \"middleName\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"personType\": \"Person\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"adGroup\": \"<string>\",\n \"isAPIPerson\": \"<boolean>\",\n \"adDomain\": \"<string>\",\n \"userPrincipalName\": \"<string>\"\n}"
						},
						{
							"name": "Person not found due to permission or Person doesn't exist in system.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/persons/<integer>/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"persons",
										"<integer>",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "notification-groups",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "persons",
							"item": [
								{
									"name": "List Persons in Notification Group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "Authenticate using a JSON Web Token (JWT)"
											}
										],
										"url": {
											"raw": "{{BaseUrl_Admin}}/notification-groups/:id/persons/?offset=<integer>&count=100",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"notification-groups",
												":id",
												"persons",
												""
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "The starting point of records to be fetched."
												},
												{
													"key": "count",
													"value": "100",
													"description": "The number of results to be returned."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "The Notification Group Id stored in database."
												}
											]
										},
										"description": "Returns all available Persons in a Notififcation Group who match the specified criteria. "
									},
									"response": [
										{
											"name": "Returns available Persons in Notification Group.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													}
												],
												"url": {
													"raw": "{{BaseUrl_Admin}}/notification-groups/<integer>/persons/?offset=<integer>&count=100",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"notification-groups",
														"<integer>",
														"persons",
														""
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "count",
															"value": "100"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"id\": \"<integer>\",\n \"middleName\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"personType\": \"Person\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"adGroup\": \"<string>\",\n \"isAPIPerson\": \"<boolean>\",\n \"adDomain\": \"<string>\",\n \"userPrincipalName\": \"<string>\"\n}"
										},
										{
											"name": "Notification Group not found due to permissions or Notification Group does not exist in the system.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													}
												],
												"url": {
													"raw": "{{BaseUrl_Admin}}/notification-groups/<integer>/persons/?offset=<integer>&count=100",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"notification-groups",
														"<integer>",
														"persons",
														""
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "count",
															"value": "100"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Add Persons to Notification Group",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "Authenticate using a JSON Web Token (JWT)"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/notification-groups/:id/persons/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"notification-groups",
												":id",
												"persons",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "The Notification Group Id stored in database."
												}
											]
										},
										"description": "Adds Persons to an existing Notification Group."
									},
									"response": [
										{
											"name": "Notification Group not found due to permissions or Notification Group does not exist in the system.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/notification-groups/<integer>/persons/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"notification-groups",
														"<integer>",
														"persons",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
										},
										{
											"name": "Returns acknowledgement of Persons added to Notification Group.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/notification-groups/<integer>/persons/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"notification-groups",
														"<integer>",
														"persons",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"id\": \"<integer>\",\n \"middleName\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"personType\": \"Person\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"adGroup\": \"<string>\",\n \"isAPIPerson\": \"<boolean>\",\n \"adDomain\": \"<string>\",\n \"userPrincipalName\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Remove Persons From Notification Group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "Authenticate using a JSON Web Token (JWT)"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
										},
										"url": {
											"raw": "{{BaseUrl_Admin}}/notification-groups/:id/persons/",
											"host": [
												"{{BaseUrl_Admin}}"
											],
											"path": [
												"notification-groups",
												":id",
												"persons",
												""
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "The Notification Group Id stored in database."
												}
											]
										},
										"description": "Removes matching Persons available in a Notification Group. Ignores any Persons who do not match the criteria."
									},
									"response": [
										{
											"name": "Notification Group not found due to permissions or Notification Group does not exist in the system.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/notification-groups/<integer>/persons/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"notification-groups",
														"<integer>",
														"persons",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
										},
										{
											"name": "Returns acknowledgement of Persons removed from Notification Group.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Authenticate using a JSON Web Token (JWT)",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
												},
												"url": {
													"raw": "{{BaseUrl_Admin}}/notification-groups/<integer>/persons/",
													"host": [
														"{{BaseUrl_Admin}}"
													],
													"path": [
														"notification-groups",
														"<integer>",
														"persons",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"id\": \"<integer>\",\n \"middleName\": \"<string>\",\n \"fullName\": \"<string>\",\n \"abbreviation\": \"<string>\",\n \"personType\": \"Person\",\n \"shortDesc\": \"<string>\",\n \"longDesc\": \"<string>\",\n \"recordStatusName\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"adGroup\": \"<string>\",\n \"isAPIPerson\": \"<boolean>\",\n \"adDomain\": \"<string>\",\n \"userPrincipalName\": \"<string>\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List Notification Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/notification-groups/?offset=<integer>&count=100&direction=asc&orderBy=name&name=<string>&id=<integer>,<integer>",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"notification-groups",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The starting point of records to be fetched."
								},
								{
									"key": "count",
									"value": "100",
									"description": "The number of results to be returned."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Sort records by ascending or descending."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "Sort records by notification name or Id."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filters records by object name."
								},
								{
									"key": "id",
									"value": "<integer>,<integer>",
									"description": "Filters records by Notification Id."
								}
							]
						},
						"description": "Returns all Notification Groups that match specified criteria. Filters by name or Id. "
					},
					"response": [
						{
							"name": "Notification Groups not found due to permissions or Notification Groups don't exist in the system.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/notification-groups/?offset=<integer>&count=100&direction=asc&orderBy=name&name=<string>&id=<integer>,<integer>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"notification-groups",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<integer>,<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						},
						{
							"name": "Returns available Notification Groups based on specified filter criteria.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{BaseUrl_Admin}}/notification-groups/?offset=<integer>&count=100&direction=asc&orderBy=name&name=<string>&id=<integer>,<integer>",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"notification-groups",
										""
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<integer>,<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"status\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Notification Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/notification-groups/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"notification-groups",
								""
							]
						},
						"description": "Creates new Notification Group in the system after validating the inputs. "
					},
					"response": [
						{
							"name": "Returns newly created Notification Group.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/notification-groups/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"notification-groups",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"status\": \"<string>\"\n}"
						},
						{
							"name": "Validation failure or System is unable to create new Notification Group.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/notification-groups/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"notification-groups",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update Notification Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "Authenticate using a JSON Web Token (JWT)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{BaseUrl_Admin}}/notification-groups/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"notification-groups",
								""
							]
						},
						"description": "Updates Notification Groups in the system after validating the inputs. "
					},
					"response": [
						{
							"name": "Returns updated Notification Group.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/notification-groups/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"notification-groups",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"shortDescription\": \"<string>\",\n \"longDescription\": \"<string>\",\n \"dateUpdated\": \"<dateTime>\",\n \"status\": \"<string>\"\n}"
						},
						{
							"name": "Validation failure or System is unable to update Notification Group.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Authenticate using a JSON Web Token (JWT)",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"shortDescription\": \"<string>\",\n    \"longDescription\": \"<string>\",\n    \"dateUpdated\": \"<dateTime>\",\n    \"status\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{BaseUrl_Admin}}/notification-groups/",
									"host": [
										"{{BaseUrl_Admin}}"
									],
									"path": [
										"notification-groups",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Identity From List",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"description": "Authenticate using a JSON Web Token (JWT)"
					},
					{
						"key": "maxItemsThreshold",
						"value": 1000,
						"description": "The upper limit for items that can be returned in a single request. "
					}
				],
				"url": {
					"raw": "{{BaseUrl_Admin}}/identity-lists/:guid/",
					"host": [
						"{{BaseUrl_Admin}}"
					],
					"path": [
						"identity-lists",
						":guid",
						""
					],
					"variable": [
						{
							"key": "guid",
							"value": "<string>",
							"description": "The GUID stored in database."
						}
					]
				},
				"description": "Returns Identities embedded in an Identity list. Identities have Accounts or Identifiers associated with them."
			},
			"response": [
				{
					"name": "Returns Identities and accounts that have internal Identifiers associated with their Identity list Id.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Authenticate using a JSON Web Token (JWT)",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": ""
							},
							{
								"description": {
									"content": "The upper limit for items that can be returned in a single request. ",
									"type": "text/plain"
								},
								"key": "maxItemsThreshold",
								"value": 1000
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/identity-lists/<string>/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identity-lists",
								"<string>",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"id\": \"<integer>\",\n  \"primaryLogin\": \"<string>\",\n  \"accounts\": [\n   {\n    \"idmAccountID\": \"<integer>\",\n    \"hasOwnerIdentity\": \"<boolean>\",\n    \"hasSameRootEntityAsTarget\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"accountType\": \"<string>\",\n    \"login\": \"<string>\",\n    \"nameFirst\": \"<string>\",\n    \"nameMiddle\": \"<string>\",\n    \"nameLast\": \"<string>\",\n    \"company\": \"<string>\",\n    \"department\": \"<string>\",\n    \"title\": \"<string>\",\n    \"manager\": \"<string>\",\n    \"addressCity\": \"<string>\",\n    \"domainName\": \"<string>\",\n    \"entity\": {\n     \"entityId\": \"<integer>\",\n     \"rootEntityId\": \"<integer>\",\n     \"path\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"identifiers\": [\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"idmAccountID\": \"<integer>\",\n    \"hasOwnerIdentity\": \"<boolean>\",\n    \"hasSameRootEntityAsTarget\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"accountType\": \"<string>\",\n    \"login\": \"<string>\",\n    \"nameFirst\": \"<string>\",\n    \"nameMiddle\": \"<string>\",\n    \"nameLast\": \"<string>\",\n    \"company\": \"<string>\",\n    \"department\": \"<string>\",\n    \"title\": \"<string>\",\n    \"manager\": \"<string>\",\n    \"addressCity\": \"<string>\",\n    \"domainName\": \"<string>\",\n    \"entity\": {\n     \"entityId\": \"<integer>\",\n     \"rootEntityId\": \"<integer>\",\n     \"path\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"identifiers\": [\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"id\": \"<integer>\",\n  \"primaryLogin\": \"<string>\",\n  \"accounts\": [\n   {\n    \"idmAccountID\": \"<integer>\",\n    \"hasOwnerIdentity\": \"<boolean>\",\n    \"hasSameRootEntityAsTarget\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"accountType\": \"<string>\",\n    \"login\": \"<string>\",\n    \"nameFirst\": \"<string>\",\n    \"nameMiddle\": \"<string>\",\n    \"nameLast\": \"<string>\",\n    \"company\": \"<string>\",\n    \"department\": \"<string>\",\n    \"title\": \"<string>\",\n    \"manager\": \"<string>\",\n    \"addressCity\": \"<string>\",\n    \"domainName\": \"<string>\",\n    \"entity\": {\n     \"entityId\": \"<integer>\",\n     \"rootEntityId\": \"<integer>\",\n     \"path\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"identifiers\": [\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"idmAccountID\": \"<integer>\",\n    \"hasOwnerIdentity\": \"<boolean>\",\n    \"hasSameRootEntityAsTarget\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"accountType\": \"<string>\",\n    \"login\": \"<string>\",\n    \"nameFirst\": \"<string>\",\n    \"nameMiddle\": \"<string>\",\n    \"nameLast\": \"<string>\",\n    \"company\": \"<string>\",\n    \"department\": \"<string>\",\n    \"title\": \"<string>\",\n    \"manager\": \"<string>\",\n    \"addressCity\": \"<string>\",\n    \"domainName\": \"<string>\",\n    \"entity\": {\n     \"entityId\": \"<integer>\",\n     \"rootEntityId\": \"<integer>\",\n     \"path\": \"<string>\",\n     \"name\": \"<string>\"\n    },\n    \"identifiers\": [\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     },\n     {\n      \"idmIdentifierID\": \"<integer>\",\n      \"identifierType\": \"<string>\",\n      \"value\": \"<string>\"\n     }\n    ]\n   }\n  ]\n }\n]"
				},
				{
					"name": "List has more items than specified in maxItemsThreshold header.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Authenticate using a JSON Web Token (JWT)",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": ""
							},
							{
								"description": {
									"content": "The upper limit for items that can be returned in a single request. ",
									"type": "text/plain"
								},
								"key": "maxItemsThreshold",
								"value": 1000
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/identity-lists/<string>/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"identity-lists",
								"<string>",
								""
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Get Locations",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"description": "Authenticate using a JSON Web Token (JWT)"
					}
				],
				"url": {
					"raw": "{{BaseUrl_Admin}}/locations/",
					"host": [
						"{{BaseUrl_Admin}}"
					],
					"path": [
						"locations",
						""
					]
				},
				"description": "Provides all available locations in the system. Locations are populated in the system via KB import."
			},
			"response": [
				{
					"name": "Returns available locations.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Authenticate using a JSON Web Token (JWT)",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": ""
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/locations/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"locations",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"Name\": \"<string>\",\n  \"Id\": \"<integer>\",\n  \"ParentLocationId\": \"<integer>\",\n  \"LocationType\": \"<string>\"\n },\n {\n  \"Name\": \"<string>\",\n  \"Id\": \"<integer>\",\n  \"ParentLocationId\": \"<integer>\",\n  \"LocationType\": \"<string>\"\n }\n]"
				}
			]
		},
		{
			"name": "Get User Permissions",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"description": "Authenticate using a JSON Web Token (JWT)"
					}
				],
				"url": {
					"raw": "{{BaseUrl_Admin}}/permissions/",
					"host": [
						"{{BaseUrl_Admin}}"
					],
					"path": [
						"permissions",
						""
					]
				},
				"description": "Returns a user's permissions based on the user's JWT. The permission set includes access to Entities, Hosts, Networks, System Monitor Agents, and Log Sources."
			},
			"response": [
				{
					"name": "Returns the User’s current permissions in the system. ",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Authenticate using a JSON Web Token (JWT)",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": ""
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/permissions/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"permissions",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"<object>\""
				},
				{
					"name": "User not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Authenticate using a JSON Web Token (JWT)",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": ""
							}
						],
						"url": {
							"raw": "{{BaseUrl_Admin}}/permissions/",
							"host": [
								"{{BaseUrl_Admin}}"
							],
							"path": [
								"permissions",
								""
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"statusCode\": \"<integer>\",\n \"name\": \"<string>\",\n \"message\": \"<string>\",\n \"source\": \"<string>\",\n \"details\": \"<string>\",\n \"upstreamError\": \"<string>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6353e69f-1c39-46b1-a75e-8d8873dab6ad",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "923fb762-9be1-41d1-b3c1-9a1494a2203f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}