using namespace System
using namespace System.Collections.Generic
Function Get-RfVulnerabilityDemoEvents {
    <#
    .SYNOPSIS
        List Recorded Future Vulnerability Demo Events
    .DESCRIPTION
        Get VirusTotal Url cmdlet retrieves summarized AntiVirus analysis results based on a Domain.  
    .PARAMETER Credential
        PSCredential containing an API Token in the Password field.
        
        Note: You can bypass the need to provide a Credential by setting
        the preference variable $SrfPreferences.VirusTotal.VtApiToken
        with a valid Api Token.
    .PARAMETER Domain
        Domain
    .INPUTS
        System.String -> Domain
    .OUTPUTS
        PSCustomObject representing the report results.
    .EXAMPLE
        PS C:\> Get-VtDomainReport -Credential $token -Url "logrhythm.com"
        ---
    .NOTES
        VirusTotal-API
    .LINK
        https://github.com/SmartResponse-Framework/SmartResponse.Framework
    #>

    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false, Position = 0)]
        [ValidateNotNull()]
        [string] $Token = $SrfPreferences.OSINT.RecordedFuture.APIKey
    )

    Begin {
        $Token = ""
        $BaseUrl = $SrfPreferences.OSINT.RecordedFuture.BaseUrl
        #$Token = $Credential.GetNetworkCredential().Password

        $Headers = [Dictionary[string,string]]::new()
        $Headers.Add("X-RFToken", $Token)

        Write-Verbose "$($Headers | Out-String)"

        # Request Setup
        $Method = $HttpMethod.Get

    }

    Process {

        # Define Search URL
        $RequestUrl = $BaseUrl + "vulnerability/demoevents"

        Try {
            $Response = Invoke-RestMethod $RequestUrl -Method $Method -Headers $Headers
        }
        catch [System.Net.WebException] {
            Write-Host $_
        }
        return $Response
    }
 

    End { }
}